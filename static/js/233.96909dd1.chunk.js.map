{"version":3,"file":"static/js/233.96909dd1.chunk.js","mappings":"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","sources":["../node_modules/react-icons/lib/esm/iconsManifest.js","../node_modules/react-icons/lib/esm/iconContext.js","../node_modules/react-icons/lib/esm/iconBase.js","../node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/@babel/runtime/helpers/esm/objectSpread2.js","../node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","../node_modules/framer-motion/dist/es/context/PresenceContext.mjs","../node_modules/framer-motion/dist/es/utils/is-browser.mjs","../node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs","../node_modules/framer-motion/dist/es/context/LazyContext.mjs","../node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","../node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","../node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","../node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","../node_modules/framer-motion/dist/es/motion/features/definitions.mjs","../node_modules/framer-motion/dist/es/utils/use-constant.mjs","../node_modules/framer-motion/dist/es/projection/node/state.mjs","../node_modules/framer-motion/dist/es/projection/node/id.mjs","../node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","../node_modules/framer-motion/dist/es/motion/index.mjs","../node_modules/framer-motion/dist/es/motion/features/load-features.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","../node_modules/framer-motion/dist/es/render/dom/motion-proxy.mjs","../node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","../node_modules/framer-motion/dist/es/render/html/utils/transform.mjs","../node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","../node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","../node_modules/framer-motion/dist/es/utils/clamp.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/index.mjs","../node_modules/framer-motion/dist/es/value/types/utils.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/units.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","../node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/html/use-props.mjs","../node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","../node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","../node_modules/framer-motion/dist/es/render/svg/use-props.mjs","../node_modules/framer-motion/dist/es/render/dom/use-render.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","../node_modules/framer-motion/dist/es/render/html/utils/render.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","../node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","../node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","../node_modules/framer-motion/dist/es/utils/resolve-value.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","../node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","../node_modules/framer-motion/dist/es/render/html/config-motion.mjs","../node_modules/framer-motion/dist/es/events/add-dom-event.mjs","../node_modules/framer-motion/dist/es/events/utils/is-primary-pointer.mjs","../node_modules/framer-motion/dist/es/events/event-info.mjs","../node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","../node_modules/framer-motion/dist/es/utils/pipe.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/lock.mjs","../node_modules/framer-motion/dist/es/motion/features/Feature.mjs","../node_modules/framer-motion/dist/es/frameloop/data.mjs","../node_modules/framer-motion/dist/es/frameloop/index.mjs","../node_modules/framer-motion/dist/es/frameloop/create-render-step.mjs","../node_modules/framer-motion/dist/es/gestures/hover.mjs","../node_modules/framer-motion/dist/es/gestures/focus.mjs","../node_modules/framer-motion/dist/es/gestures/utils/is-node-or-child.mjs","../node_modules/framer-motion/dist/es/utils/noop.mjs","../node_modules/framer-motion/dist/es/gestures/press.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","../node_modules/framer-motion/dist/es/motion/features/gestures.mjs","../node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","../node_modules/framer-motion/dist/es/utils/errors.mjs","../node_modules/framer-motion/dist/es/utils/time-conversion.mjs","../node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","../node_modules/framer-motion/dist/es/easing/utils/is-bezier-definition.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/easing.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/supports.mjs","../node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","../node_modules/framer-motion/dist/es/easing/ease.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","../node_modules/framer-motion/dist/es/easing/circ.mjs","../node_modules/framer-motion/dist/es/easing/back.mjs","../node_modules/framer-motion/dist/es/easing/utils/map.mjs","../node_modules/framer-motion/dist/es/easing/anticipate.mjs","../node_modules/framer-motion/dist/es/value/types/color/utils.mjs","../node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","../node_modules/framer-motion/dist/es/value/types/color/hex.mjs","../node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","../node_modules/framer-motion/dist/es/value/types/color/index.mjs","../node_modules/framer-motion/dist/es/utils/mix.mjs","../node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","../node_modules/framer-motion/dist/es/utils/mix-color.mjs","../node_modules/framer-motion/dist/es/value/types/complex/index.mjs","../node_modules/framer-motion/dist/es/utils/mix-complex.mjs","../node_modules/framer-motion/dist/es/utils/progress.mjs","../node_modules/framer-motion/dist/es/utils/interpolate.mjs","../node_modules/framer-motion/dist/es/utils/offsets/default.mjs","../node_modules/framer-motion/dist/es/utils/offsets/fill.mjs","../node_modules/framer-motion/dist/es/animation/generators/keyframes.mjs","../node_modules/framer-motion/dist/es/easing/utils/is-easing-array.mjs","../node_modules/framer-motion/dist/es/utils/offsets/time.mjs","../node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/velocity.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/find.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/index.mjs","../node_modules/framer-motion/dist/es/animation/generators/inertia.mjs","../node_modules/framer-motion/dist/es/animation/animators/js/driver-frameloop.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/calc-duration.mjs","../node_modules/framer-motion/dist/es/animation/animators/js/index.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/create-accelerated-animation.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/index.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","../node_modules/framer-motion/dist/es/animation/animators/instant.mjs","../node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","../node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","../node_modules/framer-motion/dist/es/animation/utils/transitions.mjs","../node_modules/framer-motion/dist/es/animation/utils/keyframes.mjs","../node_modules/framer-motion/dist/es/animation/utils/wildcards.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","../node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","../node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","../node_modules/framer-motion/dist/es/utils/array.mjs","../node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","../node_modules/framer-motion/dist/es/value/index.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","../node_modules/framer-motion/dist/es/render/utils/setters.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","../node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","../node_modules/framer-motion/dist/es/motion/features/animations.mjs","../node_modules/framer-motion/dist/es/utils/distance.mjs","../node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","../node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","../node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","../node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","../node_modules/framer-motion/dist/es/projection/utils/measure.mjs","../node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","../node_modules/framer-motion/dist/es/projection/geometry/models.mjs","../node_modules/framer-motion/dist/es/gestures/drag/index.mjs","../node_modules/framer-motion/dist/es/gestures/pan/index.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","../node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","../node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","../node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","../node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","../node_modules/framer-motion/dist/es/projection/shared/stack.mjs","../node_modules/framer-motion/dist/es/projection/styles/transform.mjs","../node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","../node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","../node_modules/framer-motion/dist/es/utils/delay.mjs","../node_modules/framer-motion/dist/es/debug/record.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-element.mjs","../node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/single-value.mjs","../node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","../node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","../node_modules/framer-motion/dist/es/motion/features/drag.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/parse-dom-variant.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","../node_modules/framer-motion/dist/es/render/store.mjs","../node_modules/framer-motion/dist/es/render/VisualElement.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","../node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","../node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","../node_modules/@babel/runtime/helpers/esm/superPropBase.js","../node_modules/@babel/runtime/helpers/esm/get.js","../node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","../node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","../node_modules/framer-motion/dist/es/motion/features/layout.mjs","../node_modules/framer-motion/dist/es/render/dom/motion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/create-config.mjs"],"sourcesContent":["export var IconsManifest = [\n  {\n    \"id\": \"ci\",\n    \"name\": \"Circum Icons\",\n    \"projectUrl\": \"https://circumicons.com/\",\n    \"license\": \"MPL-2.0 license\",\n    \"licenseUrl\": \"https://github.com/Klarr-Agency/Circum-Icons/blob/main/LICENSE\"\n  },\n  {\n    \"id\": \"fa\",\n    \"name\": \"Font Awesome 5\",\n    \"projectUrl\": \"https://fontawesome.com/\",\n    \"license\": \"CC BY 4.0 License\",\n    \"licenseUrl\": \"https://creativecommons.org/licenses/by/4.0/\"\n  },\n  {\n    \"id\": \"fa6\",\n    \"name\": \"Font Awesome 6\",\n    \"projectUrl\": \"https://fontawesome.com/\",\n    \"license\": \"CC BY 4.0 License\",\n    \"licenseUrl\": \"https://creativecommons.org/licenses/by/4.0/\"\n  },\n  {\n    \"id\": \"io\",\n    \"name\": \"Ionicons 4\",\n    \"projectUrl\": \"https://ionicons.com/\",\n    \"license\": \"MIT\",\n    \"licenseUrl\": \"https://github.com/ionic-team/ionicons/blob/master/LICENSE\"\n  },\n  {\n    \"id\": \"io5\",\n    \"name\": \"Ionicons 5\",\n    \"projectUrl\": \"https://ionicons.com/\",\n    \"license\": \"MIT\",\n    \"licenseUrl\": \"https://github.com/ionic-team/ionicons/blob/master/LICENSE\"\n  },\n  {\n    \"id\": \"md\",\n    \"name\": \"Material Design icons\",\n    \"projectUrl\": \"http://google.github.io/material-design-icons/\",\n    \"license\": \"Apache License Version 2.0\",\n    \"licenseUrl\": \"https://github.com/google/material-design-icons/blob/master/LICENSE\"\n  },\n  {\n    \"id\": \"ti\",\n    \"name\": \"Typicons\",\n    \"projectUrl\": \"http://s-ings.com/typicons/\",\n    \"license\": \"CC BY-SA 3.0\",\n    \"licenseUrl\": \"https://creativecommons.org/licenses/by-sa/3.0/\"\n  },\n  {\n    \"id\": \"go\",\n    \"name\": \"Github Octicons icons\",\n    \"projectUrl\": \"https://octicons.github.com/\",\n    \"license\": \"MIT\",\n    \"licenseUrl\": \"https://github.com/primer/octicons/blob/master/LICENSE\"\n  },\n  {\n    \"id\": \"fi\",\n    \"name\": \"Feather\",\n    \"projectUrl\": \"https://feathericons.com/\",\n    \"license\": \"MIT\",\n    \"licenseUrl\": \"https://github.com/feathericons/feather/blob/master/LICENSE\"\n  },\n  {\n    \"id\": \"lu\",\n    \"name\": \"Lucide\",\n    \"projectUrl\": \"https://lucide.dev/\",\n    \"license\": \"ISC\",\n    \"licenseUrl\": \"https://github.com/lucide-icons/lucide/blob/main/LICENSE\"\n  },\n  {\n    \"id\": \"gi\",\n    \"name\": \"Game Icons\",\n    \"projectUrl\": \"https://game-icons.net/\",\n    \"license\": \"CC BY 3.0\",\n    \"licenseUrl\": \"https://creativecommons.org/licenses/by/3.0/\"\n  },\n  {\n    \"id\": \"wi\",\n    \"name\": \"Weather Icons\",\n    \"projectUrl\": \"https://erikflowers.github.io/weather-icons/\",\n    \"license\": \"SIL OFL 1.1\",\n    \"licenseUrl\": \"http://scripts.sil.org/OFL\"\n  },\n  {\n    \"id\": \"di\",\n    \"name\": \"Devicons\",\n    \"projectUrl\": \"https://vorillaz.github.io/devicons/\",\n    \"license\": \"MIT\",\n    \"licenseUrl\": \"https://opensource.org/licenses/MIT\"\n  },\n  {\n    \"id\": \"ai\",\n    \"name\": \"Ant Design Icons\",\n    \"projectUrl\": \"https://github.com/ant-design/ant-design-icons\",\n    \"license\": \"MIT\",\n    \"licenseUrl\": \"https://opensource.org/licenses/MIT\"\n  },\n  {\n    \"id\": \"bs\",\n    \"name\": \"Bootstrap Icons\",\n    \"projectUrl\": \"https://github.com/twbs/icons\",\n    \"license\": \"MIT\",\n    \"licenseUrl\": \"https://opensource.org/licenses/MIT\"\n  },\n  {\n    \"id\": \"ri\",\n    \"name\": \"Remix Icon\",\n    \"projectUrl\": \"https://github.com/Remix-Design/RemixIcon\",\n    \"license\": \"Apache License Version 2.0\",\n    \"licenseUrl\": \"http://www.apache.org/licenses/\"\n  },\n  {\n    \"id\": \"fc\",\n    \"name\": \"Flat Color Icons\",\n    \"projectUrl\": \"https://github.com/icons8/flat-color-icons\",\n    \"license\": \"MIT\",\n    \"licenseUrl\": \"https://opensource.org/licenses/MIT\"\n  },\n  {\n    \"id\": \"gr\",\n    \"name\": \"Grommet-Icons\",\n    \"projectUrl\": \"https://github.com/grommet/grommet-icons\",\n    \"license\": \"Apache License Version 2.0\",\n    \"licenseUrl\": \"http://www.apache.org/licenses/\"\n  },\n  {\n    \"id\": \"hi\",\n    \"name\": \"Heroicons\",\n    \"projectUrl\": \"https://github.com/tailwindlabs/heroicons\",\n    \"license\": \"MIT\",\n    \"licenseUrl\": \"https://opensource.org/licenses/MIT\"\n  },\n  {\n    \"id\": \"hi2\",\n    \"name\": \"Heroicons 2\",\n    \"projectUrl\": \"https://github.com/tailwindlabs/heroicons\",\n    \"license\": \"MIT\",\n    \"licenseUrl\": \"https://opensource.org/licenses/MIT\"\n  },\n  {\n    \"id\": \"si\",\n    \"name\": \"Simple Icons\",\n    \"projectUrl\": \"https://simpleicons.org/\",\n    \"license\": \"CC0 1.0 Universal\",\n    \"licenseUrl\": \"https://creativecommons.org/publicdomain/zero/1.0/\"\n  },\n  {\n    \"id\": \"sl\",\n    \"name\": \"Simple Line Icons\",\n    \"projectUrl\": \"https://thesabbir.github.io/simple-line-icons/\",\n    \"license\": \"MIT\",\n    \"licenseUrl\": \"https://opensource.org/licenses/MIT\"\n  },\n  {\n    \"id\": \"im\",\n    \"name\": \"IcoMoon Free\",\n    \"projectUrl\": \"https://github.com/Keyamoon/IcoMoon-Free\",\n    \"license\": \"CC BY 4.0 License\",\n    \"licenseUrl\": \"https://github.com/Keyamoon/IcoMoon-Free/blob/master/License.txt\"\n  },\n  {\n    \"id\": \"bi\",\n    \"name\": \"BoxIcons\",\n    \"projectUrl\": \"https://github.com/atisawd/boxicons\",\n    \"license\": \"CC BY 4.0 License\",\n    \"licenseUrl\": \"https://github.com/atisawd/boxicons/blob/master/LICENSE\"\n  },\n  {\n    \"id\": \"cg\",\n    \"name\": \"css.gg\",\n    \"projectUrl\": \"https://github.com/astrit/css.gg\",\n    \"license\": \"MIT\",\n    \"licenseUrl\": \"https://opensource.org/licenses/MIT\"\n  },\n  {\n    \"id\": \"vsc\",\n    \"name\": \"VS Code Icons\",\n    \"projectUrl\": \"https://github.com/microsoft/vscode-codicons\",\n    \"license\": \"CC BY 4.0\",\n    \"licenseUrl\": \"https://creativecommons.org/licenses/by/4.0/\"\n  },\n  {\n    \"id\": \"tb\",\n    \"name\": \"Tabler Icons\",\n    \"projectUrl\": \"https://github.com/tabler/tabler-icons\",\n    \"license\": \"MIT\",\n    \"licenseUrl\": \"https://opensource.org/licenses/MIT\"\n  },\n  {\n    \"id\": \"tfi\",\n    \"name\": \"Themify Icons\",\n    \"projectUrl\": \"https://github.com/lykmapipo/themify-icons\",\n    \"license\": \"MIT\",\n    \"licenseUrl\": \"https://github.com/thecreation/standard-icons/blob/master/modules/themify-icons/LICENSE\"\n  },\n  {\n    \"id\": \"rx\",\n    \"name\": \"Radix Icons\",\n    \"projectUrl\": \"https://icons.radix-ui.com\",\n    \"license\": \"MIT\",\n    \"licenseUrl\": \"https://github.com/radix-ui/icons/blob/master/LICENSE\"\n  },\n  {\n    \"id\": \"pi\",\n    \"name\": \"Phosphor Icons\",\n    \"projectUrl\": \"https://github.com/phosphor-icons/core\",\n    \"license\": \"MIT\",\n    \"licenseUrl\": \"https://github.com/phosphor-icons/core/blob/main/LICENSE\"\n  },\n  {\n    \"id\": \"lia\",\n    \"name\": \"Icons8 Line Awesome\",\n    \"projectUrl\": \"https://icons8.com/line-awesome\",\n    \"license\": \"MIT\",\n    \"licenseUrl\": \"https://github.com/icons8/line-awesome/blob/master/LICENSE.md\"\n  }\n]","import React from \"react\";\nexport var DefaultContext = {\n  color: undefined,\n  size: undefined,\n  className: undefined,\n  style: undefined,\n  attr: undefined\n};\nexport var IconContext = React.createContext && React.createContext(DefaultContext);","var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport React from \"react\";\nimport { IconContext, DefaultContext } from \"./iconContext\";\nfunction Tree2Element(tree) {\n  return tree && tree.map(function (node, i) {\n    return React.createElement(node.tag, __assign({\n      key: i\n    }, node.attr), Tree2Element(node.child));\n  });\n}\nexport function GenIcon(data) {\n  // eslint-disable-next-line react/display-name\n  return function (props) {\n    return React.createElement(IconBase, __assign({\n      attr: __assign({}, data.attr)\n    }, props), Tree2Element(data.child));\n  };\n}\nexport function IconBase(props) {\n  var elem = function (conf) {\n    var attr = props.attr,\n      size = props.size,\n      title = props.title,\n      svgProps = __rest(props, [\"attr\", \"size\", \"title\"]);\n    var computedSize = size || conf.size || \"1em\";\n    var className;\n    if (conf.className) className = conf.className;\n    if (props.className) className = (className ? className + \" \" : \"\") + props.className;\n    return React.createElement(\"svg\", __assign({\n      stroke: \"currentColor\",\n      fill: \"currentColor\",\n      strokeWidth: \"0\"\n    }, conf.attr, attr, svgProps, {\n      className: className,\n      style: __assign(__assign({\n        color: props.color || conf.color\n      }, conf.style), props.style),\n      height: computedSize,\n      width: computedSize,\n      xmlns: \"http://www.w3.org/2000/svg\"\n    }), title && React.createElement(\"title\", null, title), props.children);\n  };\n  return IconContext !== undefined ? React.createElement(IconContext.Consumer, null, function (conf) {\n    return elem(conf);\n  }) : elem(DefaultContext);\n}","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"./defineProperty.js\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","import { createContext } from 'react';\n\nconst MotionContext = createContext({});\n\nexport { MotionContext };\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = createContext(null);\n\nexport { PresenceContext };\n","const isBrowser = typeof document !== \"undefined\";\n\nexport { isBrowser };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n","import { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","function isRefObject(ref) {\n    return (typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","function isAnimationControls(v) {\n    return typeof v === \"object\" && typeof v.start === \"function\";\n}\n\nexport { isAnimationControls };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\nimport { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"exit\",\n        \"whileInView\",\n        \"whileFocus\",\n        \"whileDrag\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { useConstant } from '../../utils/use-constant.mjs';\nimport { globalProjectionState } from './state.mjs';\n\nlet id = 1;\nfunction useProjectionId() {\n    return useConstant(() => {\n        if (globalProjectionState.hasEverUpdated) {\n            return id++;\n        }\n    });\n}\n\nexport { useProjectionId };\n","import { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","import { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","import * as React from 'react';\nimport { forwardRef, useContext } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { useProjectionId } from '../projection/node/id.mjs';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { SwitchLayoutGroupContext } from '../context/SwitchLayoutGroupContext.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        /**\n         * Create a unique projection ID for this component. If a new component is added\n         * during a layout animation we'll use this to query the DOM and hydrate its ref early, allowing\n         * us to measure it as soon as any layout effect flushes pending layout animations.\n         *\n         * Performance note: It'd be better not to have to search the DOM for these elements.\n         * For newly-entering components it could be enough to only correct treeScale, in which\n         * case we could mount in a scale-correction mode. This wouldn't be enough for\n         * shared element transitions however. Perhaps for those we could revert to a root node\n         * that gets forceRendered and layout animations are triggered on its layout effect.\n         */\n        const projectionId = isStatic ? undefined : useProjectionId();\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement);\n            /**\n             * Load Motion gesture and animation features. These are rendered as renderless\n             * components so each feature can optionally make use of React lifecycle methods.\n             */\n            const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n            const isStrict = useContext(LazyContext).strict;\n            if (context.visualElement) {\n                MeasureLayout = context.visualElement.loadFeatures(\n                // Note: Pass the full new combined props to correctly re-render dynamic feature components.\n                configAndProps, isStrict, preloadedFeatures, projectionId, initialLayoutGroupConfig);\n            }\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (React.createElement(MotionContext.Provider, { value: context },\n            MeasureLayout && context.visualElement ? (React.createElement(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null,\n            useRender(Component, props, projectionId, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)));\n    }\n    const ForwardRefComponent = forwardRef(MotionComponent);\n    ForwardRefComponent[motionComponentSymbol] = Component;\n    return ForwardRefComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\n\nexport { createMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","import { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement) {\n    const { visualElement: parent } = useContext(MotionContext);\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef();\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    useInsertionEffect(() => {\n        visualElement && visualElement.update(props, presenceContext);\n    });\n    useIsomorphicLayoutEffect(() => {\n        visualElement && visualElement.render();\n    });\n    useEffect(() => {\n        visualElement && visualElement.updateFeatures();\n    });\n    /**\n     * Ideally this function would always run in a useEffect.\n     *\n     * However, if we have optimised appear animations to handoff from,\n     * it needs to happen synchronously to ensure there's no flash of\n     * incorrect styles in the event of a hydration error.\n     *\n     * So if we detect a situtation where optimised appear animations\n     * are running, we use useLayoutEffect to trigger animations.\n     */\n    const useAnimateChangesEffect = window.HandoffAppearAnimations\n        ? useIsomorphicLayoutEffect\n        : useEffect;\n    useAnimateChangesEffect(() => {\n        if (visualElement && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    return visualElement;\n}\n\nexport { useVisualElement };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        instance && visualState.mount && visualState.mount(instance);\n        if (visualElement) {\n            instance\n                ? visualElement.mount(instance)\n                : visualElement.unmount();\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","import { createMotionComponent } from '../../motion/index.mjs';\n\n/**\n * Convert any React component into a `motion` component. The provided component\n * **must** use `React.forwardRef` to the underlying DOM component you want to animate.\n *\n * ```jsx\n * const Component = React.forwardRef((props, ref) => {\n *   return <div ref={ref} />\n * })\n *\n * const MotionComponent = motion(Component)\n * ```\n *\n * @public\n */\nfunction createMotionProxy(createConfig) {\n    function custom(Component, customMotionComponentConfig = {}) {\n        return createMotionComponent(createConfig(Component, customMotionComponentConfig));\n    }\n    if (typeof Proxy === \"undefined\") {\n        return custom;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    return new Proxy(custom, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, custom(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createMotionProxy };\n","/**\n * We keep these listed seperately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","const scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    Object.assign(scaleCorrectors, correctors);\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n","import { transformPropOrder } from './transform.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(transform, { enableHardwareAcceleration = true, allowTransformNone = true, }, transformIsDefault, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        if (transform[key] !== undefined) {\n            const transformName = translateAlias[key] || key;\n            transformString += `${transformName}(${transform[key]}) `;\n        }\n    }\n    if (enableHardwareAcceleration && !transform.z) {\n        transformString += \"translateZ(0)\";\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (allowTransformNone && transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = checkStringStartsWith(\"--\");\nconst isCSSVariableToken = checkStringStartsWith(\"var(--\");\n\nexport { isCSSVariableName, isCSSVariableToken };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","const clamp = (min, max, v) => Math.min(Math.max(v, min), max);\n\nexport { clamp };\n","import { clamp } from '../../../utils/clamp.mjs';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","/**\n * TODO: When we move from string as a source of truth to data models\n * everything in this folder should probably be referred to as models vs types\n */\n// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\nconst floatRegex = /(-)?([\\d]*\\.?[\\d])+/g;\nconst colorRegex = /(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))/gi;\nconst singleColorRegex = /^(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))$/i;\nfunction isString(v) {\n    return typeof v === \"string\";\n}\n\nexport { colorRegex, floatRegex, isString, sanitize, singleColorRegex };\n","import { isString } from '../utils.mjs';\n\nconst createUnitType = (unit) => ({\n    test: (v) => isString(v) && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = createUnitType(\"deg\");\nconst percent = createUnitType(\"%\");\nconst px = createUnitType(\"px\");\nconst vh = createUnitType(\"vh\");\nconst vw = createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { px, degrees, progressPercentage } from '../../../value/types/numbers/units.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    size: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Transform props\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n    // Misc\n    zIndex: int,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { buildTransform } from './build-transform.mjs';\nimport { isCSSVariableName } from '../../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nfunction buildHTMLStyles(state, latestValues, options, transformTemplate) {\n    const { style, vars, transform, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    // Does the calculated transform essentially equal \"none\"?\n    let transformIsNone = true;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept seperately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        /**\n         * If this is a CSS variable we don't do any further processing.\n         */\n        if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        // Convert the value to its default value type, ie 0 -> \"0px\"\n        const valueType = numberValueTypes[key];\n        const valueAsType = getValueAsType(value, valueType);\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            transform[key] = valueAsType;\n            // If we already know we have a non-default transform, early return\n            if (!transformIsNone)\n                continue;\n            // Otherwise check to see if this is a default transform\n            if (value !== (valueType.default || 0))\n                transformIsNone = false;\n        }\n        else if (key.startsWith(\"origin\")) {\n            // If this is a transform origin, flag and enable further transform-origin processing\n            hasTransformOrigin = true;\n            transformOrigin[key] = valueAsType;\n        }\n        else {\n            style[key] = valueAsType;\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(state.transform, options, transformIsNone, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState, isStatic) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, { enableHardwareAcceleration: !isStatic }, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState, isStatic) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState, isStatic));\n    return props.transformValues ? props.transformValues(style) : style;\n}\nfunction useHTMLProps(props, visualState, isStatic) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState, isStatic);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"transformValues\",\n    \"custom\",\n    \"inherit\",\n    \"onLayoutAnimationStart\",\n    \"onLayoutAnimationComplete\",\n    \"onLayoutMeasure\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] && key.startsWith(\"onDrag\"))) {\n            filteredProps[key] = props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, options, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, options, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Treat x/y not as shortcuts but as actual attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, { enableHardwareAcceleration: false }, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, projectionId, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = {\n            ...filteredProps,\n            ...visualProps,\n            ref,\n        };\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        if (projectionId) {\n            elementProps[\"data-projection-id\"] = projectionId;\n        }\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/g, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style && isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props)) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps);\n    for (const key in props) {\n        if (isMotionValue(props[key]) || isMotionValue(prevProps[key])) {\n            const targetKey = key === \"x\" || key === \"y\" ? \"attr\" + key.toUpperCase() : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","function resolveVariantFromProps(props, definition, custom, currentValues = {}, currentVelocity = {}) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, onMount, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onMount) {\n        state.mount = (instance) => onMount(props, instance, state);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        list.forEach((definition) => {\n            const resolved = resolveVariantFromProps(props, definition);\n            if (!resolved)\n                return;\n            const { transitionEnd, transition, ...target } = resolved;\n            for (const key in target) {\n                let valueTarget = target[key];\n                if (Array.isArray(valueTarget)) {\n                    /**\n                     * Take final keyframe if the initial animation is blocked because\n                     * we want to initialise at the end of that blocked animation.\n                     */\n                    const index = isInitialAnimationBlocked\n                        ? valueTarget.length - 1\n                        : 0;\n                    valueTarget = valueTarget[index];\n                }\n                if (valueTarget !== null) {\n                    values[key] = valueTarget;\n                }\n            }\n            for (const key in transitionEnd)\n                values[key] = transitionEnd[key];\n        });\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","import { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onMount: (props, instance, { renderState, latestValues }) => {\n            try {\n                renderState.dimensions =\n                    typeof instance.getBBox ===\n                        \"function\"\n                        ? instance.getBBox()\n                        : instance.getBoundingClientRect();\n            }\n            catch (e) {\n                // Most likely trying to measure an unrendered element under Firefox\n                renderState.dimensions = {\n                    x: 0,\n                    y: 0,\n                    width: 0,\n                    height: 0,\n                };\n            }\n            buildSVGAttrs(renderState, latestValues, { enableHardwareAcceleration: false }, isSVGTag(instance.tagName), props.transformTemplate);\n            renderSVG(instance, renderState);\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","import { isPrimaryPointer } from './utils/is-primary-pointer.mjs';\n\nfunction extractEventInfo(event, pointType = \"page\") {\n    return {\n        point: {\n            x: event[pointType + \"X\"],\n            y: event[pointType + \"Y\"],\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","function createLock(name) {\n    let lock = null;\n    return () => {\n        const openLock = () => {\n            lock = null;\n        };\n        if (lock === null) {\n            lock = name;\n            return openLock;\n        }\n        return false;\n    };\n}\nconst globalHorizontalLock = createLock(\"dragHorizontal\");\nconst globalVerticalLock = createLock(\"dragVertical\");\nfunction getGlobalLock(drag) {\n    let lock = false;\n    if (drag === \"y\") {\n        lock = globalVerticalLock();\n    }\n    else if (drag === \"x\") {\n        lock = globalHorizontalLock();\n    }\n    else {\n        const openHorizontal = globalHorizontalLock();\n        const openVertical = globalVerticalLock();\n        if (openHorizontal && openVertical) {\n            lock = () => {\n                openHorizontal();\n                openVertical();\n            };\n        }\n        else {\n            // Release the locks because we don't use them\n            if (openHorizontal)\n                openHorizontal();\n            if (openVertical)\n                openVertical();\n        }\n    }\n    return lock;\n}\nfunction isDragActive() {\n    // Check the gesture lock - if we get it, it means no drag gesture is active\n    // and we can safely fire the tap gesture.\n    const openGestureLock = getGlobalLock(true);\n    if (!openGestureLock)\n        return true;\n    openGestureLock();\n    return false;\n}\n\nexport { createLock, getGlobalLock, isDragActive };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","const frameData = {\n    delta: 0,\n    timestamp: 0,\n    isProcessing: false,\n};\n\nexport { frameData };\n","import { createRenderStep } from './create-render-step.mjs';\nimport { frameData } from './data.mjs';\n\nconst maxElapsed = 40;\nlet useDefaultElapsed = true;\nlet runNextFrame = false;\nconst stepsOrder = [\n    \"read\",\n    \"update\",\n    \"preRender\",\n    \"render\",\n    \"postRender\",\n];\nconst steps = stepsOrder.reduce((acc, key) => {\n    acc[key] = createRenderStep(() => (runNextFrame = true));\n    return acc;\n}, {});\nconst sync = stepsOrder.reduce((acc, key) => {\n    const step = steps[key];\n    acc[key] = (process, keepAlive = false, immediate = false) => {\n        if (!runNextFrame)\n            startLoop();\n        return step.schedule(process, keepAlive, immediate);\n    };\n    return acc;\n}, {});\nconst cancelSync = stepsOrder.reduce((acc, key) => {\n    acc[key] = steps[key].cancel;\n    return acc;\n}, {});\nconst flushSync = stepsOrder.reduce((acc, key) => {\n    acc[key] = () => steps[key].process(frameData);\n    return acc;\n}, {});\nconst processStep = (stepId) => steps[stepId].process(frameData);\nconst processFrame = (timestamp) => {\n    runNextFrame = false;\n    frameData.delta = useDefaultElapsed\n        ? 1000 / 60\n        : Math.max(Math.min(timestamp - frameData.timestamp, maxElapsed), 1);\n    frameData.timestamp = timestamp;\n    frameData.isProcessing = true;\n    stepsOrder.forEach(processStep);\n    frameData.isProcessing = false;\n    if (runNextFrame) {\n        useDefaultElapsed = false;\n        requestAnimationFrame(processFrame);\n    }\n};\nconst startLoop = () => {\n    runNextFrame = true;\n    useDefaultElapsed = true;\n    if (!frameData.isProcessing)\n        requestAnimationFrame(processFrame);\n};\n\nexport { cancelSync, flushSync, sync };\n","function createRenderStep(runNextFrame) {\n    /**\n     * We create and reuse two arrays, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let toRun = [];\n    let toRunNextFrame = [];\n    /**\n     *\n     */\n    let numToRun = 0;\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const buffer = addToCurrentFrame ? toRun : toRunNextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            // If the buffer doesn't already contain this callback, add it\n            if (buffer.indexOf(callback) === -1) {\n                buffer.push(callback);\n                // If we're adding it to the currently running buffer, update its measured size\n                if (addToCurrentFrame && isProcessing)\n                    numToRun = toRun.length;\n            }\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            const index = toRunNextFrame.indexOf(callback);\n            if (index !== -1)\n                toRunNextFrame.splice(index, 1);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [toRun, toRunNextFrame] = [toRunNextFrame, toRun];\n            // Clear the next frame list\n            toRunNextFrame.length = 0;\n            // Execute this frame\n            numToRun = toRun.length;\n            if (numToRun) {\n                for (let i = 0; i < numToRun; i++) {\n                    const callback = toRun[i];\n                    callback(frameData);\n                    if (toKeepAlive.has(callback)) {\n                        step.schedule(callback);\n                        runNextFrame();\n                    }\n                }\n            }\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","import { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { sync } from '../frameloop/index.mjs';\n\nfunction addHoverEvent(node, isActive) {\n    const eventName = \"pointer\" + (isActive ? \"enter\" : \"leave\");\n    const callbackName = \"onHover\" + (isActive ? \"Start\" : \"End\");\n    const handleEvent = (event, info) => {\n        if (event.type === \"touch\" || isDragActive())\n            return;\n        const props = node.getProps();\n        if (node.animationState && props.whileHover) {\n            node.animationState.setActive(\"whileHover\", isActive);\n        }\n        if (props[callbackName]) {\n            sync.update(() => props[callbackName](event, info));\n        }\n    };\n    return addPointerEvent(node.current, eventName, handleEvent, {\n        passive: !node.getProps()[callbackName],\n    });\n}\nclass HoverGesture extends Feature {\n    mount() {\n        this.unmount = pipe(addHoverEvent(this.node, true), addHoverEvent(this.node, false));\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","import { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","const noop = (any) => any;\n\nexport { noop };\n","import { extractEventInfo } from '../events/event-info.mjs';\nimport { addDomEvent } from '../events/add-dom-event.mjs';\nimport { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { isNodeOrChild } from './utils/is-node-or-child.mjs';\nimport { noop } from '../utils/noop.mjs';\nimport { sync } from '../frameloop/index.mjs';\n\nfunction fireSyntheticPointerEvent(name, handler) {\n    if (!handler)\n        return;\n    const syntheticPointerEvent = new PointerEvent(\"pointer\" + name);\n    handler(syntheticPointerEvent, extractEventInfo(syntheticPointerEvent));\n}\nclass PressGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removeStartListeners = noop;\n        this.removeEndListeners = noop;\n        this.removeAccessibleListeners = noop;\n        this.startPointerPress = (startEvent, startInfo) => {\n            this.removeEndListeners();\n            if (this.isPressing)\n                return;\n            const props = this.node.getProps();\n            const endPointerPress = (endEvent, endInfo) => {\n                if (!this.checkPressEnd())\n                    return;\n                const { onTap, onTapCancel } = this.node.getProps();\n                sync.update(() => {\n                    /**\n                     * We only count this as a tap gesture if the event.target is the same\n                     * as, or a child of, this component's element\n                     */\n                    !isNodeOrChild(this.node.current, endEvent.target)\n                        ? onTapCancel && onTapCancel(endEvent, endInfo)\n                        : onTap && onTap(endEvent, endInfo);\n                });\n            };\n            const removePointerUpListener = addPointerEvent(window, \"pointerup\", endPointerPress, { passive: !(props.onTap || props[\"onPointerUp\"]) });\n            const removePointerCancelListener = addPointerEvent(window, \"pointercancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo), { passive: !(props.onTapCancel || props[\"onPointerCancel\"]) });\n            this.removeEndListeners = pipe(removePointerUpListener, removePointerCancelListener);\n            this.startPress(startEvent, startInfo);\n        };\n        this.startAccessiblePress = () => {\n            const handleKeydown = (keydownEvent) => {\n                if (keydownEvent.key !== \"Enter\" || this.isPressing)\n                    return;\n                const handleKeyup = (keyupEvent) => {\n                    if (keyupEvent.key !== \"Enter\" || !this.checkPressEnd())\n                        return;\n                    fireSyntheticPointerEvent(\"up\", (event, info) => {\n                        const { onTap } = this.node.getProps();\n                        if (onTap) {\n                            sync.update(() => onTap(event, info));\n                        }\n                    });\n                };\n                this.removeEndListeners();\n                this.removeEndListeners = addDomEvent(this.node.current, \"keyup\", handleKeyup);\n                fireSyntheticPointerEvent(\"down\", (event, info) => {\n                    this.startPress(event, info);\n                });\n            };\n            const removeKeydownListener = addDomEvent(this.node.current, \"keydown\", handleKeydown);\n            const handleBlur = () => {\n                if (!this.isPressing)\n                    return;\n                fireSyntheticPointerEvent(\"cancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo));\n            };\n            const removeBlurListener = addDomEvent(this.node.current, \"blur\", handleBlur);\n            this.removeAccessibleListeners = pipe(removeKeydownListener, removeBlurListener);\n        };\n    }\n    startPress(event, info) {\n        this.isPressing = true;\n        const { onTapStart, whileTap } = this.node.getProps();\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", true);\n        }\n        if (onTapStart) {\n            sync.update(() => onTapStart(event, info));\n        }\n    }\n    checkPressEnd() {\n        this.removeEndListeners();\n        this.isPressing = false;\n        const props = this.node.getProps();\n        if (props.whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", false);\n        }\n        return !isDragActive();\n    }\n    cancelPress(event, info) {\n        if (!this.checkPressEnd())\n            return;\n        const { onTapCancel } = this.node.getProps();\n        if (onTapCancel) {\n            sync.update(() => onTapCancel(event, info));\n        }\n    }\n    mount() {\n        const props = this.node.getProps();\n        const removePointerListener = addPointerEvent(this.node.current, \"pointerdown\", this.startPointerPress, { passive: !(props.onTapStart || props[\"onPointerStart\"]) });\n        const removeFocusListener = addDomEvent(this.node.current, \"focus\", this.startAccessiblePress);\n        this.removeStartListeners = pipe(removePointerListener, removeFocusListener);\n    }\n    unmount() {\n        this.removeStartListeners();\n        this.removeEndListeners();\n        this.removeAccessibleListeners();\n    }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\n/**\n * Creates an object containing the latest state of every MotionValue on a VisualElement\n */\nfunction getCurrent(visualElement) {\n    const current = {};\n    visualElement.values.forEach((value, key) => (current[key] = value.get()));\n    return current;\n}\n/**\n * Creates an object containing the latest velocity of every MotionValue on a VisualElement\n */\nfunction getVelocity(visualElement) {\n    const velocity = {};\n    visualElement.values.forEach((value, key) => (velocity[key] = value.getVelocity()));\n    return velocity;\n}\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, getCurrent(visualElement), getVelocity(visualElement));\n}\n\nexport { resolveVariant };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","import { noop } from './noop.mjs';\n\nlet warning = noop;\nlet invariant = noop;\nif (process.env.NODE_ENV !== \"production\") {\n    warning = (check, message) => {\n        if (!check && typeof console !== \"undefined\") {\n            console.warn(message);\n        }\n    };\n    invariant = (check, message) => {\n        if (!check) {\n            throw new Error(message);\n        }\n    };\n}\n\nexport { invariant, warning };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexport { millisecondsToSeconds, secondsToMilliseconds };\n","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","const isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] === \"number\";\n\nexport { isBezierDefinition };\n","import { isBezierDefinition } from '../../../easing/utils/is-bezier-definition.mjs';\n\nfunction isWaapiSupportedEasing(easing) {\n    return Boolean(!easing ||\n        (typeof easing === \"string\" && supportedWaapiEasing[easing]) ||\n        isBezierDefinition(easing) ||\n        (Array.isArray(easing) && easing.every(isWaapiSupportedEasing)));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasing(easing) {\n    if (!easing)\n        return undefined;\n    return isBezierDefinition(easing)\n        ? cubicBezierAsString(easing)\n        : Array.isArray(easing)\n            ? easing.map(mapEasingToNativeEasing)\n            : supportedWaapiEasing[easing];\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","const featureTests = {\n    waapi: () => Object.hasOwnProperty.call(Element.prototype, \"animate\"),\n};\nconst results = {};\nconst supports = {};\n/**\n * Generate features tests that cache their results.\n */\nfor (const key in featureTests) {\n    supports[key] = () => {\n        if (results[key] === undefined)\n            results[key] = featureTests[key]();\n        return results[key];\n    };\n}\n\nexport { supports };\n","import { noop } from '../utils/noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","import { cubicBezier } from './cubic-bezier.mjs';\n\nconst easeIn = cubicBezier(0.42, 0, 1, 1);\nconst easeOut = cubicBezier(0, 0, 0.58, 1);\nconst easeInOut = cubicBezier(0.42, 0, 0.58, 1);\n\nexport { easeIn, easeInOut, easeOut };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circOut);\n\nexport { circIn, circInOut, circOut };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = reverseEasing(backOut);\nconst backInOut = mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { invariant } from '../../utils/errors.mjs';\nimport { cubicBezier } from '../cubic-bezier.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { easeIn, easeInOut, easeOut } from '../ease.mjs';\nimport { circIn, circInOut, circOut } from '../circ.mjs';\nimport { backIn, backInOut, backOut } from '../back.mjs';\nimport { anticipate } from '../anticipate.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (Array.isArray(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\n\nexport { easingDefinitionToFunction };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","import { isString, singleColorRegex, floatRegex } from '../utils.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((isString(v) && singleColorRegex.test(v) && v.startsWith(type)) ||\n        (testProp && Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (!isString(v))\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { number, alpha } from '../numbers/index.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: isColorString(\"rgb\", \"red\"),\n    parse: splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: isColorString(\"hsl\", \"hue\"),\n    parse: splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { isString } from '../utils.mjs';\nimport { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return isString(v)\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mix = (from, to, progress) => -progress * from + progress * to + from;\n\nexport { mix };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","import { mix } from './mix.mjs';\nimport { invariant } from './errors.mjs';\nimport { hslaToRgba } from './hsla-to-rgba.mjs';\nimport { hex } from '../value/types/color/hex.mjs';\nimport { rgba } from '../value/types/color/rgba.mjs';\nimport { hsla } from '../value/types/color/hsla.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    return Math.sqrt(Math.max(0, v * (to * to - fromExpo) + fromExpo));\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    invariant(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Framer Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mix(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","import { color } from '../color/index.mjs';\nimport { number } from '../numbers/index.mjs';\nimport { isString, floatRegex, colorRegex, sanitize } from '../utils.mjs';\n\nconst colorToken = \"${c}\";\nconst numberToken = \"${n}\";\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        isString(v) &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nfunction analyseComplexValue(v) {\n    if (typeof v === \"number\")\n        v = `${v}`;\n    const values = [];\n    let numColors = 0;\n    let numNumbers = 0;\n    const colors = v.match(colorRegex);\n    if (colors) {\n        numColors = colors.length;\n        // Strip colors from input so they're not picked up by number regex.\n        // There's a better way to combine these regex searches, but its beyond my regex skills\n        v = v.replace(colorRegex, colorToken);\n        values.push(...colors.map(color.parse));\n    }\n    const numbers = v.match(floatRegex);\n    if (numbers) {\n        numNumbers = numbers.length;\n        v = v.replace(floatRegex, numberToken);\n        values.push(...numbers.map(number.parse));\n    }\n    return { values, numColors, numNumbers, tokenised: v };\n}\nfunction parse(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { values, numColors, tokenised } = analyseComplexValue(source);\n    const numValues = values.length;\n    return (v) => {\n        let output = tokenised;\n        for (let i = 0; i < numValues; i++) {\n            output = output.replace(i < numColors ? colorToken : numberToken, i < numColors\n                ? color.transform(v[i])\n                : sanitize(v[i]));\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parse(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = { test, parse, createTransformer, getAnimatableNone };\n\nexport { analyseComplexValue, complex };\n","import { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { pipe } from './pipe.mjs';\nimport { warning } from './errors.mjs';\nimport { color } from '../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../value/types/complex/index.mjs';\n\nfunction getMixer(origin, target) {\n    if (typeof origin === \"number\") {\n        return (v) => mix(origin, target, v);\n    }\n    else if (color.test(origin)) {\n        return mixColor(origin, target);\n    }\n    else {\n        return mixComplex(origin, target);\n    }\n}\nconst mixArray = (from, to) => {\n    const output = [...from];\n    const numValues = output.length;\n    const blendValue = from.map((fromThis, i) => getMixer(fromThis, to[i]));\n    return (v) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](v);\n        }\n        return output;\n    };\n};\nconst mixObject = (origin, target) => {\n    const output = { ...origin, ...target };\n    const blendValue = {};\n    for (const key in output) {\n        if (origin[key] !== undefined && target[key] !== undefined) {\n            blendValue[key] = getMixer(origin[key], target[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n};\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.numColors === targetStats.numColors &&\n        originStats.numNumbers >= targetStats.numNumbers;\n    if (canInterpolate) {\n        return pipe(mixArray(originStats.values, targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return (p) => `${p > 0 ? target : origin}`;\n    }\n};\n\nexport { mixArray, mixComplex, mixObject };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","import { invariant } from './errors.mjs';\nimport { color } from '../value/types/color/index.mjs';\nimport { clamp } from './clamp.mjs';\nimport { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { mixComplex, mixArray, mixObject } from './mix-complex.mjs';\nimport { pipe } from './pipe.mjs';\nimport { progress } from './progress.mjs';\nimport { noop } from './noop.mjs';\n\nconst mixNumber = (from, to) => (p) => mix(from, to, p);\nfunction detectMixerFactory(v) {\n    if (typeof v === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof v === \"string\") {\n        if (color.test(v)) {\n            return mixColor;\n        }\n        else {\n            return mixComplex;\n        }\n    }\n    else if (Array.isArray(v)) {\n        return mixArray;\n    }\n    else if (typeof v === \"object\") {\n        return mixObject;\n    }\n    return mixNumber;\n}\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || detectMixerFactory(output[0]);\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] || noop : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    /**\n     * If we're only provided a single input, we can just make a function\n     * that returns the output.\n     */\n    if (inputLength === 1)\n        return () => output[0];\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","import { mix } from '../mix.mjs';\nimport { progress } from '../progress.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mix(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { isEasingArray } from '../../easing/utils/is-easing-array.mjs';\nimport { easingDefinitionToFunction } from '../../easing/utils/map.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../../utils/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../../utils/offsets/time.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","const isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { isEasingArray };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { velocityPerSecond } from '../../../utils/velocity-per-second.mjs';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","import { warning } from '../../../utils/errors.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\n\nconst safeMin = 0.001;\nconst minDuration = 0.01;\nconst maxDuration = 10.0;\nconst minDamping = 0.05;\nconst maxDamping = 1;\nfunction findSpring({ duration = 800, bounce = 0.25, velocity = 0, mass = 1, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(maxDuration), \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(minDamping, maxDamping, dampingRatio);\n    duration = clamp(minDuration, maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: 100,\n            damping: 10,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring, maxDamping, maxDuration, minDamping, minDuration };\n","import { millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: 0.0,\n        stiffness: 100,\n        damping: 10,\n        mass: 1.0,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        const derived = findSpring(options);\n        springOptions = {\n            ...springOptions,\n            ...derived,\n            velocity: 0.0,\n            mass: 1.0,\n        };\n        springOptions.isResolvedFromDuration = true;\n    }\n    return springOptions;\n}\nfunction spring({ keyframes, restDelta, restSpeed, ...options }) {\n    const origin = keyframes[0];\n    const target = keyframes[keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, velocity, duration, isResolvedFromDuration, } = getSpringOptions(options);\n    const initialVelocity = velocity ? -millisecondsToSeconds(velocity) : 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale ? 0.01 : 2);\n    restDelta || (restDelta = isGranularScale ? 0.005 : 0.5);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    return {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = initialVelocity;\n                if (t !== 0) {\n                    /**\n                     * We only need to calculate velocity for under-damped springs\n                     * as over- and critically-damped springs can't overshoot, so\n                     * checking only for displacement is enough.\n                     */\n                    if (dampingRatio < 1) {\n                        currentVelocity = calcGeneratorVelocity(resolveSpring, t, current);\n                    }\n                    else {\n                        currentVelocity = 0;\n                    }\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n    };\n}\n\nexport { spring };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value),\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t > timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","import { sync, cancelSync } from '../../../frameloop/index.mjs';\nimport { frameData } from '../../../frameloop/data.mjs';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: () => sync.update(passTimestamp, true),\n        stop: () => cancelSync.update(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => frameData.isProcessing ? frameData.timestamp : performance.now(),\n    };\n};\n\nexport { frameloopDriver };\n","/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxGeneratorDuration = 20000;\nfunction calcGeneratorDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxGeneratorDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration >= maxGeneratorDuration ? Infinity : duration;\n}\n\nexport { calcGeneratorDuration, maxGeneratorDuration };\n","import { keyframes } from '../../generators/keyframes.mjs';\nimport { spring } from '../../generators/spring/index.mjs';\nimport { inertia } from '../../generators/inertia.mjs';\nimport { frameloopDriver } from './driver-frameloop.mjs';\nimport { interpolate } from '../../../utils/interpolate.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorDuration } from '../../generators/utils/calc-duration.mjs';\n\nconst types = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\n/**\n * Animate a single value on the main thread.\n *\n * This function is written, where functionality overlaps,\n * to be largely spec-compliant with WAAPI to allow fungibility\n * between the two.\n */\nfunction animateValue({ autoplay = true, delay = 0, driver = frameloopDriver, keyframes: keyframes$1, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", onPlay, onStop, onComplete, onUpdate, ...options }) {\n    let speed = 1;\n    let hasStopped = false;\n    let resolveFinishedPromise;\n    let currentFinishedPromise;\n    /**\n     * Create a new finished Promise every time we enter the\n     * finished state and resolve the old Promise. This is\n     * WAAPI-compatible behaviour.\n     */\n    const updateFinishedPromise = () => {\n        resolveFinishedPromise && resolveFinishedPromise();\n        currentFinishedPromise = new Promise((resolve) => {\n            resolveFinishedPromise = resolve;\n        });\n    };\n    // Create the first finished promise\n    updateFinishedPromise();\n    let animationDriver;\n    const generatorFactory = types[type] || keyframes;\n    /**\n     * If this isn't the keyframes generator and we've been provided\n     * strings as keyframes, we need to interpolate these.\n     * TODO: Support velocity for units and complex value types/\n     */\n    let mapNumbersToKeyframes;\n    if (generatorFactory !== keyframes &&\n        typeof keyframes$1[0] !== \"number\") {\n        mapNumbersToKeyframes = interpolate([0, 100], keyframes$1, {\n            clamp: false,\n        });\n        keyframes$1 = [0, 100];\n    }\n    const generator = generatorFactory({ ...options, keyframes: keyframes$1 });\n    let mirroredGenerator;\n    if (repeatType === \"mirror\") {\n        mirroredGenerator = generatorFactory({\n            ...options,\n            keyframes: [...keyframes$1].reverse(),\n            velocity: -(options.velocity || 0),\n        });\n    }\n    let playState = \"idle\";\n    let holdTime = null;\n    let startTime = null;\n    let cancelTime = null;\n    /**\n     * If duration is undefined and we have repeat options,\n     * we need to calculate a duration from the generator.\n     *\n     * We set it to the generator itself to cache the duration.\n     * Any timeline resolver will need to have already precalculated\n     * the duration by this step.\n     */\n    if (generator.calculatedDuration === null && repeat) {\n        generator.calculatedDuration = calcGeneratorDuration(generator);\n    }\n    const { calculatedDuration } = generator;\n    let resolvedDuration = Infinity;\n    let totalDuration = Infinity;\n    if (calculatedDuration !== null) {\n        resolvedDuration = calculatedDuration + repeatDelay;\n        totalDuration = resolvedDuration * (repeat + 1) - repeatDelay;\n    }\n    let currentTime = 0;\n    const tick = (timestamp) => {\n        if (startTime === null)\n            return;\n        /**\n         * requestAnimationFrame timestamps can come through as lower than\n         * the startTime as set by performance.now(). Here we prevent this,\n         * though in the future it could be possible to make setting startTime\n         * a pending operation that gets resolved here.\n         */\n        if (speed > 0)\n            startTime = Math.min(startTime, timestamp);\n        if (holdTime !== null) {\n            currentTime = holdTime;\n        }\n        else {\n            currentTime = (timestamp - startTime) * speed;\n        }\n        // Rebase on delay\n        const timeWithoutDelay = currentTime - delay;\n        const isInDelayPhase = timeWithoutDelay < 0;\n        currentTime = Math.max(timeWithoutDelay, 0);\n        /**\n         * If this animation has finished, set the current time\n         * to the total duration.\n         */\n        if (playState === \"finished\" && holdTime === null) {\n            currentTime = totalDuration;\n        }\n        let elapsed = currentTime;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = currentTime / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            currentIteration = Math.min(currentIteration, repeat + 1);\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const iterationIsOdd = Boolean(currentIteration % 2);\n            if (iterationIsOdd) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            let p = clamp(0, 1, iterationProgress);\n            if (currentTime > totalDuration) {\n                p = repeatType === \"reverse\" && iterationIsOdd ? 1 : 0;\n            }\n            elapsed = p * resolvedDuration;\n        }\n        /**\n         * If we're in negative time, set state as the initial keyframe.\n         * This prevents delay: x, duration: 0 animations from finishing\n         * instantly.\n         */\n        const state = isInDelayPhase\n            ? { done: false, value: keyframes$1[0] }\n            : frameGenerator.next(elapsed);\n        if (mapNumbersToKeyframes) {\n            state.value = mapNumbersToKeyframes(state.value);\n        }\n        let { done } = state;\n        if (!isInDelayPhase && calculatedDuration !== null) {\n            done = currentTime >= totalDuration;\n        }\n        const isAnimationFinished = holdTime === null &&\n            (playState === \"finished\" ||\n                (playState === \"running\" && done) ||\n                (speed < 0 && currentTime <= 0));\n        if (onUpdate) {\n            onUpdate(state.value);\n        }\n        if (isAnimationFinished) {\n            finish();\n        }\n        return state;\n    };\n    const stopAnimationDriver = () => {\n        animationDriver && animationDriver.stop();\n        animationDriver = undefined;\n    };\n    const cancel = () => {\n        playState = \"idle\";\n        stopAnimationDriver();\n        updateFinishedPromise();\n        startTime = cancelTime = null;\n    };\n    const finish = () => {\n        playState = \"finished\";\n        onComplete && onComplete();\n        stopAnimationDriver();\n        updateFinishedPromise();\n    };\n    const play = () => {\n        if (hasStopped)\n            return;\n        if (!animationDriver)\n            animationDriver = driver(tick);\n        const now = animationDriver.now();\n        onPlay && onPlay();\n        if (holdTime !== null) {\n            startTime = now - holdTime;\n        }\n        else if (!startTime || playState === \"finished\") {\n            startTime = now;\n        }\n        cancelTime = startTime;\n        holdTime = null;\n        /**\n         * Set playState to running only after we've used it in\n         * the previous logic.\n         */\n        playState = \"running\";\n        animationDriver.start();\n    };\n    if (autoplay) {\n        play();\n    }\n    const controls = {\n        then(resolve, reject) {\n            return currentFinishedPromise.then(resolve, reject);\n        },\n        get time() {\n            return millisecondsToSeconds(currentTime);\n        },\n        set time(newTime) {\n            newTime = secondsToMilliseconds(newTime);\n            currentTime = newTime;\n            if (holdTime !== null || !animationDriver || speed === 0) {\n                holdTime = newTime;\n            }\n            else {\n                startTime = animationDriver.now() - newTime / speed;\n            }\n        },\n        get duration() {\n            const duration = generator.calculatedDuration === null\n                ? calcGeneratorDuration(generator)\n                : generator.calculatedDuration;\n            return millisecondsToSeconds(duration);\n        },\n        get speed() {\n            return speed;\n        },\n        set speed(newSpeed) {\n            if (newSpeed === speed || !animationDriver)\n                return;\n            speed = newSpeed;\n            controls.time = millisecondsToSeconds(currentTime);\n        },\n        get state() {\n            return playState;\n        },\n        play,\n        pause: () => {\n            playState = \"paused\";\n            holdTime = currentTime;\n        },\n        stop: () => {\n            hasStopped = true;\n            if (playState === \"idle\")\n                return;\n            playState = \"idle\";\n            onStop && onStop();\n            cancel();\n        },\n        cancel: () => {\n            if (cancelTime !== null)\n                tick(cancelTime);\n            cancel();\n        },\n        complete: () => {\n            playState = \"finished\";\n        },\n        sample: (elapsed) => {\n            startTime = 0;\n            return tick(elapsed);\n        },\n    };\n    return controls;\n}\n\nexport { animateValue };\n","import { cancelSync, sync } from '../../../frameloop/index.mjs';\nimport { animateStyle } from './index.mjs';\nimport { isWaapiSupportedEasing } from './easing.mjs';\nimport { supports } from './supports.mjs';\nimport { getFinalKeyframe } from './utils/get-final-keyframe.mjs';\nimport { animateValue } from '../js/index.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../../utils/time-conversion.mjs';\n\n/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    \"backgroundColor\",\n]);\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\n/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxDuration = 20000;\nconst requiresPregeneratedKeyframes = (valueName, options) => options.type === \"spring\" ||\n    valueName === \"backgroundColor\" ||\n    !isWaapiSupportedEasing(options.ease);\nfunction createAcceleratedAnimation(value, valueName, { onUpdate, onComplete, ...options }) {\n    const canAccelerateAnimation = supports.waapi() &&\n        acceleratedValues.has(valueName) &&\n        !options.repeatDelay &&\n        options.repeatType !== \"mirror\" &&\n        options.damping !== 0 &&\n        options.type !== \"inertia\";\n    if (!canAccelerateAnimation)\n        return false;\n    /**\n     * TODO: Unify with js/index\n     */\n    let hasStopped = false;\n    let resolveFinishedPromise;\n    let currentFinishedPromise;\n    /**\n     * Create a new finished Promise every time we enter the\n     * finished state and resolve the old Promise. This is\n     * WAAPI-compatible behaviour.\n     */\n    const updateFinishedPromise = () => {\n        currentFinishedPromise = new Promise((resolve) => {\n            resolveFinishedPromise = resolve;\n        });\n    };\n    // Create the first finished promise\n    updateFinishedPromise();\n    let { keyframes, duration = 300, ease, times } = options;\n    /**\n     * If this animation needs pre-generated keyframes then generate.\n     */\n    if (requiresPregeneratedKeyframes(valueName, options)) {\n        const sampleAnimation = animateValue({\n            ...options,\n            repeat: 0,\n            delay: 0,\n        });\n        let state = { done: false, value: keyframes[0] };\n        const pregeneratedKeyframes = [];\n        /**\n         * Bail after 20 seconds of pre-generated keyframes as it's likely\n         * we're heading for an infinite loop.\n         */\n        let t = 0;\n        while (!state.done && t < maxDuration) {\n            state = sampleAnimation.sample(t);\n            pregeneratedKeyframes.push(state.value);\n            t += sampleDelta;\n        }\n        times = undefined;\n        keyframes = pregeneratedKeyframes;\n        duration = t - sampleDelta;\n        ease = \"linear\";\n    }\n    const animation = animateStyle(value.owner.current, valueName, keyframes, {\n        ...options,\n        duration,\n        /**\n         * This function is currently not called if ease is provided\n         * as a function so the cast is safe.\n         *\n         * However it would be possible for a future refinement to port\n         * in easing pregeneration from Motion One for browsers that\n         * support the upcoming `linear()` easing function.\n         */\n        ease: ease,\n        times,\n    });\n    const cancelAnimation = () => animation.cancel();\n    const safeCancel = () => {\n        sync.update(cancelAnimation);\n        resolveFinishedPromise();\n        updateFinishedPromise();\n    };\n    /**\n     * Prefer the `onfinish` prop as it's more widely supported than\n     * the `finished` promise.\n     *\n     * Here, we synchronously set the provided MotionValue to the end\n     * keyframe. If we didn't, when the WAAPI animation is finished it would\n     * be removed from the element which would then revert to its old styles.\n     */\n    animation.onfinish = () => {\n        value.set(getFinalKeyframe(keyframes, options));\n        onComplete && onComplete();\n        safeCancel();\n    };\n    /**\n     * Animation interrupt callback.\n     */\n    return {\n        then(resolve, reject) {\n            return currentFinishedPromise.then(resolve, reject);\n        },\n        get time() {\n            return millisecondsToSeconds(animation.currentTime || 0);\n        },\n        set time(newTime) {\n            animation.currentTime = secondsToMilliseconds(newTime);\n        },\n        get speed() {\n            return animation.playbackRate;\n        },\n        set speed(newSpeed) {\n            animation.playbackRate = newSpeed;\n        },\n        get duration() {\n            return millisecondsToSeconds(duration);\n        },\n        play: () => {\n            if (hasStopped)\n                return;\n            animation.play();\n            /**\n             * Cancel any pending cancel tasks\n             */\n            cancelSync.update(cancelAnimation);\n        },\n        pause: () => animation.pause(),\n        stop: () => {\n            hasStopped = true;\n            if (animation.playState === \"idle\")\n                return;\n            /**\n             * WAAPI doesn't natively have any interruption capabilities.\n             *\n             * Rather than read commited styles back out of the DOM, we can\n             * create a renderless JS animation and sample it twice to calculate\n             * its current value, \"previous\" value, and therefore allow\n             * Motion to calculate velocity for any subsequent animation.\n             */\n            const { currentTime } = animation;\n            if (currentTime) {\n                const sampleAnimation = animateValue({\n                    ...options,\n                    autoplay: false,\n                });\n                value.setWithVelocity(sampleAnimation.sample(currentTime - sampleDelta).value, sampleAnimation.sample(currentTime).value, sampleDelta);\n            }\n            safeCancel();\n        },\n        complete: () => animation.finish(),\n        cancel: safeCancel,\n    };\n}\n\nexport { createAcceleratedAnimation };\n","import { mapEasingToNativeEasing } from './easing.mjs';\n\nfunction animateStyle(element, valueName, keyframes, { delay = 0, duration, repeat = 0, repeatType = \"loop\", ease, times, } = {}) {\n    const keyframeOptions = { [valueName]: keyframes };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    return element.animate(keyframeOptions, {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { animateStyle };\n","function getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }) {\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : keyframes.length - 1;\n    return keyframes[index];\n}\n\nexport { getFinalKeyframe };\n","import { animateValue } from './js/index.mjs';\nimport { noop } from '../../utils/noop.mjs';\n\nfunction createInstantAnimation({ keyframes, delay, onUpdate, onComplete, }) {\n    const setValue = () => {\n        onUpdate && onUpdate(keyframes[keyframes.length - 1]);\n        onComplete && onComplete();\n        /**\n         * TODO: As this API grows it could make sense to always return\n         * animateValue. This will be a bigger project as animateValue\n         * is frame-locked whereas this function resolves instantly.\n         * This is a behavioural change and also has ramifications regarding\n         * assumptions within tests.\n         */\n        return {\n            time: 0,\n            speed: 1,\n            duration: 0,\n            play: (noop),\n            pause: (noop),\n            stop: (noop),\n            then: (resolve) => {\n                resolve();\n                return Promise.resolve();\n            },\n            cancel: (noop),\n            complete: (noop),\n        };\n    };\n    return delay\n        ? animateValue({\n            keyframes: [0, 1],\n            duration: 0,\n            delay,\n            onComplete: setValue,\n        })\n        : setValue();\n}\n\nexport { createInstantAnimation };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (key, value) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (key === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        complex.test(value) && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /([a-z-]*)\\(.*?\\)/g;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","import { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\n\n/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\nfunction isZero(value) {\n    return (value === 0 ||\n        (typeof value === \"string\" &&\n            parseFloat(value) === 0 &&\n            value.indexOf(\" \") === -1));\n}\nfunction getZeroUnit(potentialUnitType) {\n    return typeof potentialUnitType === \"number\"\n        ? 0\n        : getAnimatableNone(\"\", potentialUnitType);\n}\nfunction getValueTransition(transition, key) {\n    return transition[key] || transition[\"default\"] || transition;\n}\n\nexport { getValueTransition, getZeroUnit, isTransitionDefined, isZero };\n","import { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\nimport { isAnimatable } from './is-animatable.mjs';\nimport { isZero, getZeroUnit } from './transitions.mjs';\nimport { fillWildcardKeyframes } from './wildcards.mjs';\n\nfunction getKeyframes(value, valueName, target, transition) {\n    const isTargetAnimatable = isAnimatable(valueName, target);\n    let origin = transition.from !== undefined ? transition.from : value.get();\n    if (origin === \"none\" && isTargetAnimatable && typeof target === \"string\") {\n        /**\n         * If we're trying to animate from \"none\", try and get an animatable version\n         * of the target. This could be improved to work both ways.\n         */\n        origin = getAnimatableNone(valueName, target);\n    }\n    else if (isZero(origin) && typeof target === \"string\") {\n        origin = getZeroUnit(target);\n    }\n    else if (!Array.isArray(target) &&\n        isZero(target) &&\n        typeof origin === \"string\") {\n        target = getZeroUnit(origin);\n    }\n    /**\n     * If the target has been defined as a series of keyframes\n     */\n    if (Array.isArray(target)) {\n        return fillWildcardKeyframes(origin, target);\n    }\n    else {\n        return [origin, target];\n    }\n}\n\nexport { getKeyframes };\n","function fillWildcardKeyframes(origin, [...keyframes]) {\n    /**\n     * Ensure an wildcard keyframes are hydrated by the origin.\n     */\n    for (let i = 0; i < keyframes.length; i++) {\n        if (keyframes[i] === null) {\n            keyframes[i] = i === 0 ? origin : keyframes[i - 1];\n        }\n    }\n    return keyframes;\n}\n\nexport { fillWildcardKeyframes };\n","import { warning } from '../../utils/errors.mjs';\nimport { secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { createAcceleratedAnimation } from '../animators/waapi/create-accelerated-animation.mjs';\nimport { createInstantAnimation } from '../animators/instant.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { isAnimatable } from '../utils/is-animatable.mjs';\nimport { getKeyframes } from '../utils/keyframes.mjs';\nimport { getValueTransition, isTransitionDefined } from '../utils/transitions.mjs';\nimport { animateValue } from '../animators/js/index.mjs';\n\nconst animateMotionValue = (valueName, value, target, transition = {}) => {\n    return (onComplete) => {\n        const valueTransition = getValueTransition(transition, valueName) || {};\n        /**\n         * Most transition values are currently completely overwritten by value-specific\n         * transitions. In the future it'd be nicer to blend these transitions. But for now\n         * delay actually does inherit from the root transition if not value-specific.\n         */\n        const delay = valueTransition.delay || transition.delay || 0;\n        /**\n         * Elapsed isn't a public transition option but can be passed through from\n         * optimized appear effects in milliseconds.\n         */\n        let { elapsed = 0 } = transition;\n        elapsed = elapsed - secondsToMilliseconds(delay);\n        const keyframes = getKeyframes(value, valueName, target, valueTransition);\n        /**\n         * Check if we're able to animate between the start and end keyframes,\n         * and throw a warning if we're attempting to animate between one that's\n         * animatable and another that isn't.\n         */\n        const originKeyframe = keyframes[0];\n        const targetKeyframe = keyframes[keyframes.length - 1];\n        const isOriginAnimatable = isAnimatable(valueName, originKeyframe);\n        const isTargetAnimatable = isAnimatable(valueName, targetKeyframe);\n        warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${valueName} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n        let options = {\n            keyframes,\n            velocity: value.getVelocity(),\n            ease: \"easeOut\",\n            ...valueTransition,\n            delay: -elapsed,\n            onUpdate: (v) => {\n                value.set(v);\n                valueTransition.onUpdate && valueTransition.onUpdate(v);\n            },\n            onComplete: () => {\n                onComplete();\n                valueTransition.onComplete && valueTransition.onComplete();\n            },\n        };\n        /**\n         * If there's no transition defined for this value, we can generate\n         * unqiue transition settings for this value.\n         */\n        if (!isTransitionDefined(valueTransition)) {\n            options = {\n                ...options,\n                ...getDefaultTransition(valueName, options),\n            };\n        }\n        /**\n         * Both WAAPI and our internal animation functions use durations\n         * as defined by milliseconds, while our external API defines them\n         * as seconds.\n         */\n        if (options.duration) {\n            options.duration = secondsToMilliseconds(options.duration);\n        }\n        if (options.repeatDelay) {\n            options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n        }\n        if (!isOriginAnimatable ||\n            !isTargetAnimatable ||\n            instantAnimationState.current ||\n            valueTransition.type === false) {\n            /**\n             * If we can't animate this value, or the global instant animation flag is set,\n             * or this is simply defined as an instant transition, return an instant transition.\n             */\n            return createInstantAnimation(options);\n        }\n        /**\n         * Animate via WAAPI if possible.\n         */\n        if (value.owner &&\n            value.owner.current instanceof HTMLElement &&\n            !value.owner.getProps().onUpdate) {\n            const acceleratedAnimation = createAcceleratedAnimation(value, valueName, options);\n            if (acceleratedAnimation)\n                return acceleratedAnimation;\n        }\n        /**\n         * If we didn't create an accelerated animation, create a JS animation\n         */\n        return animateValue(options);\n    };\n};\n\nexport { animateMotionValue };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^\\-?\\d*\\.?\\d+$/.test(v);\n\nexport { isNumericalString };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/.test(v);\n\nexport { isZeroValueString };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","import { frameData } from '../frameloop/data.mjs';\nimport { sync } from '../frameloop/index.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\n\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"10.11.6\";\n        /**\n         * Duration, in milliseconds, since last updating frame.\n         *\n         * @internal\n         */\n        this.timeDelta = 0;\n        /**\n         * Timestamp of the last time this `MotionValue` was updated.\n         *\n         * @internal\n         */\n        this.lastUpdated = 0;\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = false;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            this.prev = this.current;\n            this.current = v;\n            // Update timestamp\n            const { delta, timestamp } = frameData;\n            if (this.lastUpdated !== timestamp) {\n                this.timeDelta = delta;\n                this.lastUpdated = timestamp;\n                sync.postRender(this.scheduleVelocityCheck);\n            }\n            // Update update subscribers\n            if (this.prev !== this.current && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update velocity subscribers\n            if (this.events.velocityChange) {\n                this.events.velocityChange.notify(this.getVelocity());\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        /**\n         * Schedule a velocity check for the next frame.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.scheduleVelocityCheck = () => sync.postRender(this.velocityCheck);\n        /**\n         * Updates `prev` with `current` if the value hasn't been updated this frame.\n         * This ensures velocity calculations return `0`.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.velocityCheck = ({ timestamp }) => {\n            if (timestamp !== this.lastUpdated) {\n                this.prev = this.current;\n                if (this.events.velocityChange) {\n                    this.events.velocityChange.notify(this.getVelocity());\n                }\n            }\n        };\n        this.hasAnimated = false;\n        this.prev = this.current = init;\n        this.canTrackVelocity = isFloat(this.current);\n        this.owner = options.owner;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                sync.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = prev;\n        this.timeDelta = delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        // This could be isFloat(this.prev) && isFloat(this.current), but that would be wasteful\n        return this.canTrackVelocity\n            ? // These casts could be avoided if parseFloat would be typed better\n                velocityPerSecond(parseFloat(this.current) -\n                    parseFloat(this.prev), this.timeDelta)\n            : 0;\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, motionValue };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","import { isNumericalString } from '../../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\nimport { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../dom/value-types/animatable-none.mjs';\nimport { findValueType } from '../dom/value-types/find.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved ? visualElement.makeTargetAnimatable(resolved, false) : {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\nfunction setVariants(visualElement, variantLabels) {\n    const reversedLabels = [...variantLabels].reverse();\n    reversedLabels.forEach((key) => {\n        const variant = visualElement.getVariant(key);\n        variant && setTarget(visualElement, variant);\n        if (visualElement.variantChildren) {\n            visualElement.variantChildren.forEach((child) => {\n                setVariants(child, variantLabels);\n            });\n        }\n    });\n}\nfunction setValues(visualElement, definition) {\n    if (Array.isArray(definition)) {\n        return setVariants(visualElement, definition);\n    }\n    else if (typeof definition === \"string\") {\n        return setVariants(visualElement, [definition]);\n    }\n    else {\n        setTarget(visualElement, definition);\n    }\n}\nfunction checkTargetForNewValues(visualElement, target, origin) {\n    var _a, _b;\n    const newValueKeys = Object.keys(target).filter((key) => !visualElement.hasValue(key));\n    const numNewValues = newValueKeys.length;\n    if (!numNewValues)\n        return;\n    for (let i = 0; i < numNewValues; i++) {\n        const key = newValueKeys[i];\n        const targetValue = target[key];\n        let value = null;\n        /**\n         * If the target is a series of keyframes, we can use the first value\n         * in the array. If this first value is null, we'll still need to read from the DOM.\n         */\n        if (Array.isArray(targetValue)) {\n            value = targetValue[0];\n        }\n        /**\n         * If the target isn't keyframes, or the first keyframe was null, we need to\n         * first check if an origin value was explicitly defined in the transition as \"from\",\n         * if not read the value from the DOM. As an absolute fallback, take the defined target value.\n         */\n        if (value === null) {\n            value = (_b = (_a = origin[key]) !== null && _a !== void 0 ? _a : visualElement.readValue(key)) !== null && _b !== void 0 ? _b : target[key];\n        }\n        /**\n         * If value is still undefined or null, ignore it. Preferably this would throw,\n         * but this was causing issues in Framer.\n         */\n        if (value === undefined || value === null)\n            continue;\n        if (typeof value === \"string\" &&\n            (isNumericalString(value) || isZeroValueString(value))) {\n            // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n            value = parseFloat(value);\n        }\n        else if (!findValueType(value) && complex.test(targetValue)) {\n            value = getAnimatableNone(key, targetValue);\n        }\n        visualElement.addValue(key, motionValue(value, { owner: visualElement }));\n        if (origin[key] === undefined) {\n            origin[key] = value;\n        }\n        if (value !== null)\n            visualElement.setBaseTarget(key, value);\n    }\n}\nfunction getOriginFromTransition(key, transition) {\n    if (!transition)\n        return;\n    const valueTransition = transition[key] || transition[\"default\"] || transition;\n    return valueTransition.from;\n}\nfunction getOrigin(target, transition, visualElement) {\n    const origin = {};\n    for (const key in target) {\n        const transitionOrigin = getOriginFromTransition(key, transition);\n        if (transitionOrigin !== undefined) {\n            origin[key] = transitionOrigin;\n        }\n        else {\n            const value = visualElement.getValue(key);\n            if (value) {\n                origin[key] = value.get();\n            }\n        }\n    }\n    return origin;\n}\n\nexport { checkTargetForNewValues, getOrigin, getOriginFromTransition, setTarget, setValues };\n","import { sync } from '../../frameloop/index.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\nimport { optimizedAppearDataAttribute } from '../optimized-appear/data-id.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\nimport { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { setTarget } from '../../render/utils/setters.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction animateTarget(visualElement, definition, { delay = 0, transitionOverride, type } = {}) {\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = visualElement.makeTargetAnimatable(definition);\n    const willChange = visualElement.getValue(\"willChange\");\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key);\n        const valueTarget = target[key];\n        if (!value ||\n            valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = { delay, elapsed: 0, ...transition };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        if (window.HandoffAppearAnimations && !value.hasAnimated) {\n            const appearId = visualElement.getProps()[optimizedAppearDataAttribute];\n            if (appearId) {\n                valueTransition.elapsed = window.HandoffAppearAnimations(appearId, key, value, sync);\n            }\n        }\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && transformProps.has(key)\n            ? { type: false }\n            : valueTransition));\n        const animation = value.animation;\n        if (isWillChangeMotionValue(willChange)) {\n            willChange.add(key);\n            animation.then(() => willChange.remove(key));\n        }\n        animations.push(animation);\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            transitionEnd && setTarget(visualElement, transitionEnd);\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    const resolved = resolveVariant(visualElement, variant, options.custom);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n\nexport { animateVariant, sortByTreeOrder };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\nimport { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    const state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (acc, definition) => {\n        const resolved = resolveVariant(visualElement, definition);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(options, changedActiveType) {\n        const props = visualElement.getProps();\n        const context = visualElement.getVariantContext(true) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined ? props[type] : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] && prop !== props[type] && propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues, {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                removedKeys.delete(key);\n                typeState.needsAnimating[key] = true;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                if (next !== prev) {\n                    /**\n                     * If both values are keyframes, we need to shallow compare them to\n                     * detect whether any value has changed. If it has, we animate it.\n                     */\n                    if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                        if (!shallowCompare(next, prev) || variantDidChange) {\n                            markToAnimate(key);\n                        }\n                        else {\n                            /**\n                             * If it hasn't changed, we want to ensure it doesn't animate by\n                             * adding it to the list of protected keys.\n                             */\n                            typeState.protectedKeys[key] = true;\n                        }\n                    }\n                    else if (next !== undefined) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to hard-block animations\n             * TODO: Test as this should probably still handle animations triggered\n             * by removed values?\n             */\n            if (shouldAnimateType && !isInherited) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type, ...options },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                if (fallbackTarget !== undefined) {\n                    fallbackAnimation[key] = fallbackTarget;\n                }\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            props.initial === false &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive, options) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(options, type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => visualElement.notify(\"AnimationComplete\", definition));\n}\n\nexport { animateVisualElement };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        this.unmount();\n        if (isAnimationControls(animate)) {\n            this.unmount = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() { }\n}\n\nexport { AnimationFeature };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete, custom } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent, { custom: custom !== null && custom !== void 0 ? custom : this.node.getProps().custom });\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => onExitComplete(this.id));\n        }\n    }\n    mount() {\n        const { register } = this.node.presenceContext || {};\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { extractEventInfo } from '../../events/event-info.mjs';\nimport { sync, cancelSync } from '../../frameloop/index.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../utils/time-conversion.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\nimport { frameData } from '../../frameloop/data.mjs';\nimport { isPrimaryPointer } from '../../events/utils/is-primary-pointer.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            sync.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const { onEnd, onSessionEnd } = this.handlers;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(window, \"pointermove\", this.handlePointerMove), addPointerEvent(window, \"pointerup\", this.handlePointerUp), addPointerEvent(window, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelSync.update(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","import { mix } from '../../utils/mix.mjs';\n\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target = 0, maxDistance = 0.01) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mix(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    if (isNear(delta.scale, 1, 0.0001) || isNaN(delta.scale))\n        delta.scale = 1;\n    delta.translate =\n        mix(target.min, target.max, delta.origin) - delta.originPoint;\n    if (isNear(delta.translate) || isNaN(delta.translate))\n        delta.translate = 0;\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from '../../../utils/progress.mjs';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mix } from '../../../utils/mix.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic ? mix(min, point, elastic.min) : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic ? mix(max, point, elastic.max) : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mix } from '../../utils/mix.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const instance = node.instance;\n        if (instance &&\n            instance.style &&\n            instance.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    treeScale.x = snapToDefault(treeScale.x);\n    treeScale.y = snapToDefault(treeScale.y);\n}\nfunction snapToDefault(scale) {\n    if (Number.isInteger(scale))\n        return scale;\n    return scale > 1.0000000000001 || scale < 0.999999999999 ? scale : 1;\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, transforms, [key, scaleKey, originKey]) {\n    const axisOrigin = transforms[originKey] !== undefined ? transforms[originKey] : 0.5;\n    const originPoint = mix(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, transforms[key], transforms[scaleKey], originPoint, transforms.scale);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform, xKeys);\n    transformAxis(box.y, transform, yKeys);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","import { invariant } from '../../utils/errors.mjs';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { getGlobalLock } from './utils/lock.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, calcOrigin } from './utils/constraints.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { animateMotionValue } from '../../animation/interfaces/motion-value.mjs';\nimport { sync } from '../../frameloop/index.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        // This is a reference to the global drag gesture lock, ensuring only one component\n        // can \"capture\" the drag of one or both axes.\n        // TODO: Look into moving this into pansession?\n        this.openGlobalLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            // Stop any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event, \"page\").point);\n            }\n        };\n        const onStart = (event, info) => {\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openGlobalLock)\n                    this.openGlobalLock();\n                this.openGlobalLock = getGlobalLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openGlobalLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            if (onDragStart) {\n                sync.update(() => onDragStart(event, info));\n            }\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openGlobalLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n        }, { transformPagePoint: this.visualElement.getTransformPagePoint() });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        if (onDragEnd) {\n            sync.update(() => onDragEnd(event, info));\n        }\n    }\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openGlobalLock) {\n            this.openGlobalLock();\n            this.openGlobalLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        const { dragConstraints, dragElastic } = this.getProps();\n        const { layout } = this.visualElement.projection || {};\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        return axisValue.start(animateMotionValue(axis, axisValue, 0, transition));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = \"_drag\" + axis.toUpperCase();\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial ? props.initial[axis] : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mix(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mix(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints)) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        measureDragConstraints();\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","import { PanSession } from './PanSession.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { sync } from '../../frameloop/index.mjs';\n\nconst asyncHandler = (handler) => (event, info) => {\n    if (handler) {\n        sync.update(() => handler(event, info));\n    }\n};\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), { transformPagePoint: this.node.getTransformPagePoint() });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: asyncHandler(onPanSessionStart),\n            onStart: asyncHandler(onPanStart),\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                if (onPanEnd) {\n                    sync.update(() => onPanEnd(event, info));\n                }\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { invariant } from '../../../utils/errors.mjs';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst cssVariableRegex = /var\\((--[a-zA-Z0-9-_]+),? ?([a-zA-Z0-9 ()%#.,-]+)?\\)/;\nfunction parseCSSVariable(current) {\n    const match = cssVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token, fallback] = match;\n    return [token, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        return resolved.trim();\n    }\n    else if (isCSSVariableToken(fallback)) {\n        // The fallback might itself be a CSS variable, in which case we attempt to resolve it too.\n        return getVariableValue(fallback, element, depth + 1);\n    }\n    else {\n        return fallback;\n    }\n}\n/**\n * Resolve CSS variables from\n *\n * @internal\n */\nfunction resolveCSSVariables(visualElement, { ...target }, transitionEnd) {\n    const element = visualElement.current;\n    if (!(element instanceof Element))\n        return { target, transitionEnd };\n    // If `transitionEnd` isn't `undefined`, clone it. We could clone `target` and `transitionEnd`\n    // only if they change but I think this reads clearer and this isn't a performance-critical path.\n    if (transitionEnd) {\n        transitionEnd = { ...transitionEnd };\n    }\n    // Go through existing `MotionValue`s and ensure any existing CSS variables are resolved\n    visualElement.values.forEach((value) => {\n        const current = value.get();\n        if (!isCSSVariableToken(current))\n            return;\n        const resolved = getVariableValue(current, element);\n        if (resolved)\n            value.set(resolved);\n    });\n    // Cycle through every target property and resolve CSS variables. Currently\n    // we only read single-var properties like `var(--foo)`, not `calc(var(--foo) + 20px)`\n    for (const key in target) {\n        const current = target[key];\n        if (!isCSSVariableToken(current))\n            continue;\n        const resolved = getVariableValue(current, element);\n        if (!resolved)\n            continue;\n        // Clone target if it hasn't already been\n        target[key] = resolved;\n        if (!transitionEnd)\n            transitionEnd = {};\n        // If the user hasn't already set this key on `transitionEnd`, set it to the unresolved\n        // CSS variable. This will ensure that after the animation the component will reflect\n        // changes in the value of the CSS variable.\n        if (transitionEnd[key] === undefined) {\n            transitionEnd[key] = current;\n        }\n    }\n    return { target, transitionEnd };\n}\n\nexport { cssVariableRegex, parseCSSVariable, resolveCSSVariables };\n","import { cssVariableRegex } from '../../render/dom/utils/css-variables-conversion.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst varToken = \"_$css\";\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        /**\n         * We need to first strip and store CSS variables from the string.\n         */\n        const containsCSSVariables = latest.includes(\"var(\");\n        const cssVariables = [];\n        if (containsCSSVariables) {\n            latest = latest.replace(cssVariableRegex, (match) => {\n                cssVariables.push(match);\n                return varToken;\n            });\n        }\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mix(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        let output = template(shadow);\n        if (containsCSSVariables) {\n            let i = 0;\n            output = output.replace(varToken, () => {\n                const cssVariable = cssVariables[i];\n                i++;\n                return cssVariable;\n            });\n        }\n        return output;\n    },\n};\n\nexport { correctBoxShadow };\n","import { sync } from '../../../frameloop/index.mjs';\nimport React__default, { useContext } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\n\nclass MeasureLayoutWithContext extends React__default.Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                sync.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            if (!projection.currentAnimation && projection.isLead()) {\n                this.safeToRemove();\n            }\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (React__default.createElement(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { useContext, useId, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence() {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => register(id), []);\n    const safeToRemove = () => onExitComplete && onExitComplete(id);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","import { circOut } from '../../easing/circ.mjs';\nimport { progress } from '../../utils/progress.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mix(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mix(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mix(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mix(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mix(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = compress(0, 0.5, circOut);\nconst easeCrossfadeOut = compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n\nexport { copyAxisInto, copyBoxInto };\n","import { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mix(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mix(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction boxEquals(a, b) {\n    return (a.x.min === b.x.min &&\n        a.x.max === b.x.max &&\n        a.y.min === b.y.min &&\n        a.y.max === b.y.max);\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\n\nexport { aspectRatio, boxEquals, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    if (xTranslate || yTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, 0) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { rotate, rotateX, rotateY } = latestTransform;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { sync, cancelSync } from '../frameloop/index.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = performance.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelSync.read(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    sync.read(checkElapsed, true);\n    return () => cancelSync.read(checkElapsed);\n}\n\nexport { delay };\n","function record(data) {\n    if (window.MotionDebug) {\n        window.MotionDebug.record(data);\n    }\n}\n\nexport { record };\n","function isSVGElement(element) {\n    return element instanceof SVGElement && element.tagName !== \"svg\";\n}\n\nexport { isSVGElement };\n","import { cancelSync, flushSync, sync } from '../../frameloop/index.mjs';\nimport { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { getValueTransition } from '../../animation/utils/transitions.mjs';\nimport { boxEquals, isDeltaZero, aspectRatio } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { globalProjectionState } from './state.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { record } from '../../debug/record.mjs';\nimport { isSVGElement } from '../../render/dom/utils/is-svg-element.mjs';\nimport { animateSingleValue } from '../../animation/interfaces/single-value.mjs';\nimport { frameData } from '../../frameloop/data.mjs';\n\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\n/**\n * Use a mutable data object for debug data so as to not create a new\n * object every frame.\n */\nconst projectionFrameData = {\n    type: \"projectionFrame\",\n    totalNodes: 0,\n    resolvedTargetDeltas: 0,\n    recalculatedProjection: 0,\n};\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(elementId, latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            // Note: Currently only running on root node\n            this.potentialNodes = new Map();\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                projectionFrameData.totalNodes =\n                    projectionFrameData.resolvedTargetDeltas =\n                        projectionFrameData.recalculatedProjection =\n                            0;\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                record(projectionFrameData);\n            };\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.elementId = elementId;\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            elementId && this.root.registerPotentialNode(elementId, this);\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        registerPotentialNode(elementId, node) {\n            this.potentialNodes.set(elementId, node);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = false) {\n            if (this.instance)\n                return;\n            this.isSVG = isSVGElement(instance);\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            this.elementId && this.root.potentialNodes.delete(this.elementId);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEquals(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (this.options.layoutRoot ||\n                        (this.resumeFrom && this.resumeFrom.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged &&\n                            this.animationProgress === 0) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            cancelSync.preRender(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        // Note: Currently only running on root node\n        didUpdate() {\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating)\n                return;\n            this.isUpdating = false;\n            /**\n             * Search for and mount newly-added projection elements.\n             *\n             * TODO: Every time a new component is rendered we could search up the tree for\n             * the closest mounted node and query from there rather than document.\n             */\n            if (this.potentialNodes.size) {\n                this.potentialNodes.forEach(mountNodeEarly);\n                this.potentialNodes.clear();\n            }\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            // Flush any scheduled updates\n            flushSync.update();\n            flushSync.preRender();\n            flushSync.render();\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            sync.preRender(this.updateProjection, false, true);\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            sync.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot: checkIsScrollRoot(this.instance),\n                    offset: measureScroll(this.instance),\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty || this.shouldResetTransform;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            // Remove viewport scroll to give page-relative coordinates\n            const { scroll } = this.root;\n            if (scroll) {\n                translateAxis(box.x, scroll.offset.x);\n                translateAxis(box.y, scroll.offset.y);\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.isRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                        const { scroll: rootScroll } = this.root;\n                        /**\n                         * Undo the application of page scroll that was originally added\n                         * to the measured bounding box.\n                         */\n                        if (rootScroll) {\n                            translateAxis(boxWithoutScroll.x, -rootScroll.offset.x);\n                            translateAxis(boxWithoutScroll.y, -rootScroll.offset.y);\n                        }\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        forceRelativeParentToResolveTarget() {\n            if (!this.relativeParent)\n                return;\n            /**\n             * If the parent target isn't up-to-date, force it to update.\n             * This is an unfortunate de-optimisation as it means any updating relative\n             * projection will cause all the relative parents to recalculate back\n             * up the tree.\n             */\n            if (this.relativeParent.resolvedRelativeTargetAt !==\n                frameData.timestamp) {\n                this.relativeParent.resolveTargetDelta(true);\n            }\n        }\n        resolveTargetDelta(forceRecalculation = false) {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !(forceRecalculation ||\n                (isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty) ||\n                this.attemptToResolveRelativeTarget);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            this.resolvedRelativeTargetAt = frameData.timestamp;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            // TODO If this is unsuccessful this currently happens every frame\n            if (!this.targetDelta && !this.relativeTarget) {\n                // TODO: This is a semi-repetition of further down this function, make DRY\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent && relativeParent.layout) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                this.forceRelativeParentToResolveTarget();\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            projectionFrameData.resolvedTargetDeltas++;\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            var _a;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If we have resolved the target this frame we must recalculate the\n             * projection to ensure it visually represents the internal calculations.\n             */\n            if (this.resolvedRelativeTargetAt === frameData.timestamp) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            const { target } = lead;\n            if (!target)\n                return;\n            if (!this.projectionDelta) {\n                this.projectionDelta = createDelta();\n                this.projectionDeltaWithTransform = createDelta();\n            }\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            const prevProjectionTransform = this.projectionTransform;\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            this.projectionTransform = buildProjectionTransform(this.projectionDelta, this.treeScale);\n            if (this.projectionTransform !== prevProjectionTransform ||\n                this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            projectionFrameData.recalculatedProjection++;\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            this.options.scheduleRender && this.options.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot\n                ? snapshot.latestValues\n                : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation && this.currentAnimation.stop();\n            if (this.resumingFrom && this.resumingFrom.currentAnimation) {\n                this.resumingFrom.currentAnimation.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelSync.update(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = sync.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animateSingleValue(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onComplete: () => {\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected rotation values, we can early return without a forced render.\n            let hasRotate = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ) {\n                hasRotate = true;\n            }\n            // If there's no rotation values, we don't need to do any more.\n            if (!hasRotate)\n                return;\n            const resetValues = {};\n            // Check the rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                const key = \"rotate\" + transformAxes[i];\n                // Record the rotation and then temporarily set it to 0\n                if (latestValues[key]) {\n                    resetValues[key] = latestValues[key];\n                    visualElement.setStaticValue(key, 0);\n                }\n            }\n            // Force a render of this element to apply the transform with all rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp = {}) {\n            var _a, _b;\n            // TODO: Return lifecycle-persistent object\n            const styles = {};\n            if (!this.instance || this.isSVG)\n                return styles;\n            if (!this.isVisible) {\n                return { visibility: \"hidden\" };\n            }\n            else {\n                styles.visibility = \"\";\n            }\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_b = (_a = valuesToRender.opacity) !== null && _a !== void 0 ? _a : this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n                /**\n                 * Ensure relative target gets resized and rerendererd\n                 */\n                if (node.relativeTarget && !node.currentAnimation) {\n                    node.isProjectionDirty = true;\n                    node.relativeTarget[axis].max =\n                        node.relativeTarget[axis].min + length;\n                }\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEquals(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    projectionFrameData.totalNodes++;\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetRotation(node) {\n    node.resetRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mix(delta.translate, 0, p);\n    output.scale = mix(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mix(from.min, to.min, p);\n    output.max = mix(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nfunction mountNodeEarly(node, elementId) {\n    /**\n     * Rather than searching the DOM from document we can search the\n     * path for the deepest mounted ancestor and search from there\n     */\n    let searchNode = node.root;\n    for (let i = node.path.length - 1; i >= 0; i--) {\n        if (Boolean(node.path[i].instance)) {\n            searchNode = node.path[i];\n            break;\n        }\n    }\n    const searchElement = searchNode && searchNode !== node.root ? searchNode.instance : document;\n    const element = searchElement.querySelector(`[data-projection-id=\"${elementId}\"]`);\n    if (element)\n        node.mount(element, true);\n}\nfunction roundAxis(axis) {\n    axis.min = Math.round(axis.min);\n    axis.max = Math.round(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","import { animateMotionValue } from './motion-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction animateSingleValue(value, keyframes, options) {\n    const motionValue$1 = isMotionValue(value) ? value : motionValue(value);\n    motionValue$1.start(animateMotionValue(\"\", motionValue$1, keyframes, options));\n    return motionValue$1.animation;\n}\n\nexport { animateSingleValue };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode(0, {});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { isKeyframesTarget } from '../../../animation/utils/is-keyframes-target.mjs';\nimport { invariant } from '../../../utils/errors.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\nimport { findDimensionValueType } from '../value-types/dimensions.mjs';\nimport { isBrowser } from '../../../utils/is-browser.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n]);\nconst isPositionalKey = (key) => positionalKeys.has(key);\nconst hasPositionalKey = (target) => {\n    return Object.keys(target).some(isPositionalKey);\n};\nconst isNumOrPxType = (v) => v === number || v === px;\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    // Apply changes to element before measurement\n    if (removedTransforms.length)\n        visualElement.render();\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\nconst convertChangedValueTypes = (target, visualElement, changedKeys) => {\n    const originBbox = visualElement.measureViewportBox();\n    const element = visualElement.current;\n    const elementComputedStyle = getComputedStyle(element);\n    const { display } = elementComputedStyle;\n    const origin = {};\n    // If the element is currently set to display: \"none\", make it visible before\n    // measuring the target bounding box\n    if (display === \"none\") {\n        visualElement.setStaticValue(\"display\", target.display || \"block\");\n    }\n    /**\n     * Record origins before we render and update styles\n     */\n    changedKeys.forEach((key) => {\n        origin[key] = positionalValues[key](originBbox, elementComputedStyle);\n    });\n    // Apply the latest values (as set in checkAndConvertChangedValueTypes)\n    visualElement.render();\n    const targetBbox = visualElement.measureViewportBox();\n    changedKeys.forEach((key) => {\n        // Restore styles to their **calculated computed style**, not their actual\n        // originally set style. This allows us to animate between equivalent pixel units.\n        const value = visualElement.getValue(key);\n        value && value.jump(origin[key]);\n        target[key] = positionalValues[key](targetBbox, elementComputedStyle);\n    });\n    return target;\n};\nconst checkAndConvertChangedValueTypes = (visualElement, target, origin = {}, transitionEnd = {}) => {\n    target = { ...target };\n    transitionEnd = { ...transitionEnd };\n    const targetPositionalKeys = Object.keys(target).filter(isPositionalKey);\n    // We want to remove any transform values that could affect the element's bounding box before\n    // it's measured. We'll reapply these later.\n    let removedTransformValues = [];\n    let hasAttemptedToRemoveTransformValues = false;\n    const changedValueTypeKeys = [];\n    targetPositionalKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (!visualElement.hasValue(key))\n            return;\n        let from = origin[key];\n        let fromType = findDimensionValueType(from);\n        const to = target[key];\n        let toType;\n        // TODO: The current implementation of this basically throws an error\n        // if you try and do value conversion via keyframes. There's probably\n        // a way of doing this but the performance implications would need greater scrutiny,\n        // as it'd be doing multiple resize-remeasure operations.\n        if (isKeyframesTarget(to)) {\n            const numKeyframes = to.length;\n            const fromIndex = to[0] === null ? 1 : 0;\n            from = to[fromIndex];\n            fromType = findDimensionValueType(from);\n            for (let i = fromIndex; i < numKeyframes; i++) {\n                /**\n                 * Don't allow wildcard keyframes to be used to detect\n                 * a difference in value types.\n                 */\n                if (to[i] === null)\n                    break;\n                if (!toType) {\n                    toType = findDimensionValueType(to[i]);\n                    invariant(toType === fromType ||\n                        (isNumOrPxType(fromType) && isNumOrPxType(toType)), \"Keyframes must be of the same dimension as the current value\");\n                }\n                else {\n                    invariant(findDimensionValueType(to[i]) === toType, \"All keyframes must be of the same type\");\n                }\n            }\n        }\n        else {\n            toType = findDimensionValueType(to);\n        }\n        if (fromType !== toType) {\n            // If they're both just number or px, convert them both to numbers rather than\n            // relying on resize/remeasure to convert (which is wasteful in this situation)\n            if (isNumOrPxType(fromType) && isNumOrPxType(toType)) {\n                const current = value.get();\n                if (typeof current === \"string\") {\n                    value.set(parseFloat(current));\n                }\n                if (typeof to === \"string\") {\n                    target[key] = parseFloat(to);\n                }\n                else if (Array.isArray(to) && toType === px) {\n                    target[key] = to.map(parseFloat);\n                }\n            }\n            else if ((fromType === null || fromType === void 0 ? void 0 : fromType.transform) &&\n                (toType === null || toType === void 0 ? void 0 : toType.transform) &&\n                (from === 0 || to === 0)) {\n                // If one or the other value is 0, it's safe to coerce it to the\n                // type of the other without measurement\n                if (from === 0) {\n                    value.set(toType.transform(from));\n                }\n                else {\n                    target[key] = fromType.transform(to);\n                }\n            }\n            else {\n                // If we're going to do value conversion via DOM measurements, we first\n                // need to remove non-positional transform values that could affect the bbox measurements.\n                if (!hasAttemptedToRemoveTransformValues) {\n                    removedTransformValues =\n                        removeNonTranslationalTransform(visualElement);\n                    hasAttemptedToRemoveTransformValues = true;\n                }\n                changedValueTypeKeys.push(key);\n                transitionEnd[key] =\n                    transitionEnd[key] !== undefined\n                        ? transitionEnd[key]\n                        : target[key];\n                value.jump(to);\n            }\n        }\n    });\n    if (changedValueTypeKeys.length) {\n        const scrollY = changedValueTypeKeys.indexOf(\"height\") >= 0\n            ? window.pageYOffset\n            : null;\n        const convertedTarget = convertChangedValueTypes(target, visualElement, changedValueTypeKeys);\n        // If we removed transform values, reapply them before the next render\n        if (removedTransformValues.length) {\n            removedTransformValues.forEach(([key, value]) => {\n                visualElement.getValue(key).set(value);\n            });\n        }\n        // Reapply original values\n        visualElement.render();\n        // Restore scroll position\n        if (isBrowser && scrollY !== null) {\n            window.scrollTo({ top: scrollY });\n        }\n        return { target: convertedTarget, transitionEnd };\n    }\n    else {\n        return { target, transitionEnd };\n    }\n};\n/**\n * Convert value types for x/y/width/height/top/left/bottom/right\n *\n * Allows animation between `'auto'` -> `'100%'` or `0` -> `'calc(50% - 10vw)'`\n *\n * @internal\n */\nfunction unitConversion(visualElement, target, origin, transitionEnd) {\n    return hasPositionalKey(target)\n        ? checkAndConvertChangedValueTypes(visualElement, target, origin, transitionEnd)\n        : { target, transitionEnd };\n}\n\nexport { positionalValues, unitConversion };\n","import { resolveCSSVariables } from './css-variables-conversion.mjs';\nimport { unitConversion } from './unit-conversion.mjs';\n\n/**\n * Parse a DOM variant to make it animatable. This involves resolving CSS variables\n * and ensuring animations like \"20%\" => \"calc(50vw)\" are performed in pixels.\n */\nconst parseDomVariant = (visualElement, target, origin, transitionEnd) => {\n    const resolved = resolveCSSVariables(visualElement, target, transitionEnd);\n    target = resolved.target;\n    transitionEnd = resolved.transitionEnd;\n    return unitConversion(visualElement, target, origin, transitionEnd);\n};\n\nexport { parseDomVariant };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n","import { sync, cancelSync } from '../frameloop/index.mjs';\nimport { warning, invariant } from '../utils/errors.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { isRefObject } from '../utils/is-ref-object.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isWillChangeMotionValue } from '../value/use-will-change/is.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { transformProps } from './html/utils/transform.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from './utils/is-variant-label.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { variantProps } from './utils/variant-props.mjs';\nimport { visualElementStore } from './store.mjs';\n\nconst featureNames = Object.keys(featureDefinitions);\nconst numFeatures = featureNames.length;\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\nconst numVariantProps = variantProps.length;\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    constructor({ parent, props, presenceContext, reducedMotionConfig, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.scheduleRender = () => sync.render(this.render, false, true);\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't neccessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {});\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n                if (isWillChangeMotionValue(willChange)) {\n                    willChange.add(key);\n                }\n            }\n        }\n    }\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps) {\n        return {};\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        visualElementStore.delete(this.current);\n        this.projection && this.projection.unmount();\n        cancelSync.update(this.notifyUpdate);\n        cancelSync.render(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            this.features[key].unmount();\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate &&\n                sync.update(this.notifyUpdate, false, true);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    loadFeatures({ children, ...renderedProps }, isStrict, preloadedFeatures, projectionId, initialLayoutGroupConfig) {\n        let ProjectionNodeConstructor;\n        let MeasureLayout;\n        /**\n         * If we're in development mode, check to make sure we're not rendering a motion component\n         * as a child of LazyMotion, as this will break the file-size benefits of using it.\n         */\n        if (process.env.NODE_ENV !== \"production\" &&\n            preloadedFeatures &&\n            isStrict) {\n            const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n            renderedProps.ignoreStrict\n                ? warning(false, strictMessage)\n                : invariant(false, strictMessage);\n        }\n        for (let i = 0; i < numFeatures; i++) {\n            const name = featureNames[i];\n            const { isEnabled, Feature: FeatureConstructor, ProjectionNode, MeasureLayout: MeasureLayoutComponent, } = featureDefinitions[name];\n            if (ProjectionNode)\n                ProjectionNodeConstructor = ProjectionNode;\n            if (isEnabled(renderedProps)) {\n                if (!this.features[name] && FeatureConstructor) {\n                    this.features[name] = new FeatureConstructor(this);\n                }\n                if (MeasureLayoutComponent) {\n                    MeasureLayout = MeasureLayoutComponent;\n                }\n            }\n        }\n        if (!this.projection && ProjectionNodeConstructor) {\n            this.projection = new ProjectionNodeConstructor(projectionId, this.latestValues, this.parent && this.parent.projection);\n            const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, } = renderedProps;\n            this.projection.setOptions({\n                layoutId,\n                layout,\n                alwaysMeasureLayout: Boolean(drag) ||\n                    (dragConstraints && isRefObject(dragConstraints)),\n                visualElement: this,\n                scheduleRender: () => this.scheduleRender(),\n                /**\n                 * TODO: Update options in an effect. This could be tricky as it'll be too late\n                 * to update by the time layout animations run.\n                 * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n                 * ensuring it gets called if there's no potential layout animations.\n                 *\n                 */\n                animationType: typeof layout === \"string\" ? layout : \"both\",\n                initialPromotionConfig: initialLayoutGroupConfig,\n                layoutScroll,\n                layoutRoot,\n            });\n        }\n        return MeasureLayout;\n    }\n    updateFeatures() {\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature.isMounted) {\n                feature.update(this.props, this.prevProps);\n            }\n            else {\n                feature.mount();\n                feature.isMounted = true;\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.options, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Make a target animatable by Popmotion. For instance, if we're\n     * trying to animate width from 100px to 100vw we need to measure 100vw\n     * in pixels to determine what we really need to animate to. This is also\n     * pluggable to support Framer's custom value types like Color,\n     * and CSS variables.\n     */\n    makeTargetAnimatable(target, canMutate = true) {\n        return this.makeTargetAnimatableFromInstance(target, this.props, canMutate);\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listener = props[\"on\" + key];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    getVariantContext(startAtParent = false) {\n        if (startAtParent) {\n            return this.parent ? this.parent.getVariantContext() : undefined;\n        }\n        if (!this.isControllingVariants) {\n            const context = this.parent\n                ? this.parent.getVariantContext() || {}\n                : {};\n            if (this.props.initial !== undefined) {\n                context.initial = this.props.initial;\n            }\n            return context;\n        }\n        const context = {};\n        for (let i = 0; i < numVariantProps; i++) {\n            const name = variantProps[i];\n            const prop = this.props[name];\n            if (isVariantLabel(prop) || prop === false) {\n                context[name] = prop;\n            }\n        }\n        return context;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        if (value !== this.values.get(key)) {\n            this.removeValue(key);\n            this.bindToMotionValue(key, value);\n        }\n        this.values.set(key, value);\n        this.latestValues[key] = value.get();\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key) {\n        return this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : this.readValueFromInstance(this.current, key, this.options);\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        const valueFromInitial = typeof initial === \"string\" || typeof initial === \"object\"\n            ? (_a = resolveVariantFromProps(this.props, initial)) === null || _a === void 0 ? void 0 : _a[key]\n            : undefined;\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    const { willChange } = next;\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.add(key);\n            }\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"10.11.6\", `Attempting to mix Framer Motion versions ${nextValue.version} with 10.11.6 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.remove(key);\n            }\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                // TODO: Only update values that aren't being animated or even looked at\n                !existingValue.hasAnimated && existingValue.set(nextValue);\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { getOrigin, checkTargetForNewValues } from '../utils/setters.mjs';\nimport { parseDomVariant } from './utils/parse-dom-variant.mjs';\nimport { VisualElement } from '../VisualElement.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style ? props.style[key] : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    makeTargetAnimatableFromInstance({ transition, transitionEnd, ...target }, { transformValues }, isMounted) {\n        let origin = getOrigin(target, transition || {}, this);\n        /**\n         * If Framer has provided a function to convert `Color` etc value types, convert them\n         */\n        if (transformValues) {\n            if (transitionEnd)\n                transitionEnd = transformValues(transitionEnd);\n            if (target)\n                target = transformValues(target);\n            if (origin)\n                origin = transformValues(origin);\n        }\n        if (isMounted) {\n            checkTargetForNewValues(this, target, origin);\n            const parsed = parseDomVariant(this, target, origin, transitionEnd);\n            transitionEnd = parsed.transitionEnd;\n            target = parsed.target;\n        }\n        return {\n            transition,\n            transitionEnd,\n            ...target,\n        };\n    }\n}\n\nexport { DOMVisualElement };\n","import { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { isCSSVariableName } from '../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './utils/transform.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, options, props) {\n        buildHTMLStyles(renderState, latestValues, options, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current)\n                    this.current.textContent = `${latest}`;\n            });\n        }\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderHTML(instance, renderState, styleProp, projection);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import getPrototypeOf from \"./getPrototypeOf.js\";\nexport default function _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = getPrototypeOf(object);\n    if (object === null) break;\n  }\n\n  return object;\n}","import superPropBase from \"./superPropBase.js\";\nexport default function _get() {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get;\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n\n      if (desc.get) {\n        return desc.get.call(arguments.length < 3 ? target : receiver);\n      }\n\n      return desc.value;\n    };\n  }\n\n  return _get.apply(this, arguments);\n}","import { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.isSVGTag = false;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    measureInstanceViewportBox() {\n        return createBox();\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    build(renderState, latestValues, options, props) {\n        buildSVGAttrs(renderState, latestValues, options, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options, { enableHardwareAcceleration: false })\n        : new HTMLVisualElement(options, { enableHardwareAcceleration: true });\n};\n\nexport { createDomVisualElement };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","import { createMotionComponent } from '../../motion/index.mjs';\nimport { createMotionProxy } from './motion-proxy.mjs';\nimport { createDomMotionConfig } from './utils/create-config.mjs';\nimport { gestureAnimations } from '../../motion/features/gestures.mjs';\nimport { animations } from '../../motion/features/animations.mjs';\nimport { drag } from '../../motion/features/drag.mjs';\nimport { createDomVisualElement } from './create-visual-element.mjs';\nimport { layout } from '../../motion/features/layout.mjs';\n\nconst preloadedFeatures = {\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n};\n/**\n * HTML & SVG components, optimised for use with gestures and animation. These can be used as\n * drop-in replacements for any HTML & SVG component, all CSS & SVG properties are supported.\n *\n * @public\n */\nconst motion = /*@__PURE__*/ createMotionProxy((Component, config) => createDomMotionConfig(Component, config, preloadedFeatures, createDomVisualElement));\n/**\n * Create a DOM `motion` component with the provided string. This is primarily intended\n * as a full alternative to `motion` for consumers who have to support environments that don't\n * support `Proxy`.\n *\n * ```javascript\n * import { createDomMotionComponent } from \"framer-motion\"\n *\n * const motion = {\n *   div: createDomMotionComponent('div')\n * }\n * ```\n *\n * @public\n */\nfunction createDomMotionComponent(key) {\n    return createMotionComponent(createDomMotionConfig(key, { forwardMotionProps: false }, preloadedFeatures, createDomVisualElement));\n}\n\nexport { createDomMotionComponent, motion };\n","import { isSVGComponent } from './is-svg-component.mjs';\nimport { createUseRender } from '../use-render.mjs';\nimport { svgMotionConfig } from '../../svg/config-motion.mjs';\nimport { htmlMotionConfig } from '../../html/config-motion.mjs';\n\nfunction createDomMotionConfig(Component, { forwardMotionProps = false }, preloadedFeatures, createVisualElement) {\n    const baseConfig = isSVGComponent(Component)\n        ? svgMotionConfig\n        : htmlMotionConfig;\n    return {\n        ...baseConfig,\n        preloadedFeatures,\n        useRender: createUseRender(forwardMotionProps),\n        createVisualElement,\n        Component,\n    };\n}\n\nexport { createDomMotionConfig };\n"],"names":["DefaultContext","color","undefined","size","className","style","attr","IconContext","React","__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","this","__rest","e","indexOf","getOwnPropertySymbols","propertyIsEnumerable","Tree2Element","tree","map","node","tag","key","child","GenIcon","data","props","IconBase","elem","conf","title","svgProps","computedSize","stroke","fill","strokeWidth","height","width","xmlns","children","Consumer","_defineProperty","obj","value","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","keys","symbols","filter","sym","getOwnPropertyDescriptor","push","_objectSpread2","target","source","forEach","getOwnPropertyDescriptors","defineProperties","MotionConfigContext","createContext","transformPagePoint","isStatic","reducedMotion","MotionContext","PresenceContext","isBrowser","document","useIsomorphicLayoutEffect","useLayoutEffect","useEffect","LazyContext","strict","isRefObject","ref","isVariantLabel","v","Array","isArray","isAnimationControls","start","variantPriorityOrder","variantProps","isControllingVariants","animate","some","name","isVariantNode","Boolean","variants","useCreateMotionContext","context","initial","inherit","getCurrentTreeVariants","useContext","useMemo","variantLabelsAsDependency","prop","join","featureProps","animation","exit","drag","focus","hover","tap","pan","inView","layout","featureDefinitions","isEnabled","useConstant","init","useRef","current","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","id","LayoutGroupContext","SwitchLayoutGroupContext","motionComponentSymbol","Symbol","for","createMotionComponent","preloadedFeatures","createVisualElement","useRender","useVisualState","Component","features","loadFeatures","ForwardRefComponent","forwardRef","externalRef","MeasureLayout","configAndProps","layoutId","useLayoutId","projectionId","visualState","visualElement","parent","lazyContext","presenceContext","reducedMotionConfig","visualElementRef","renderer","blockInitialAnimation","useInsertionEffect","update","render","updateFeatures","window","HandoffAppearAnimations","animationState","animateChanges","useVisualElement","initialLayoutGroupConfig","isStrict","Provider","useCallback","instance","mount","unmount","useMotionRef","layoutGroupId","createMotionProxy","createConfig","custom","customMotionComponentConfig","Proxy","componentCache","Map","get","_target","has","set","lowercaseSVGElements","isSVGComponent","includes","test","scaleCorrectors","transformPropOrder","transformProps","Set","isForcedMotionValue","startsWith","isMotionValue","getVelocity","translateAlias","x","y","z","transformPerspective","numTransforms","checkStringStartsWith","token","isCSSVariableName","isCSSVariableToken","getValueAsType","type","transform","clamp","min","max","Math","number","parse","parseFloat","alpha","scale","default","sanitize","round","floatRegex","colorRegex","singleColorRegex","isString","createUnitType","unit","endsWith","split","degrees","percent","px","vh","vw","progressPercentage","int","numberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderRadius","radius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","maxWidth","maxHeight","top","right","bottom","left","padding","paddingTop","paddingRight","paddingBottom","paddingLeft","margin","marginTop","marginRight","marginBottom","marginLeft","rotate","rotateX","rotateY","rotateZ","scaleX","scaleY","scaleZ","skew","skewX","skewY","distance","translateX","translateY","translateZ","perspective","opacity","originX","originY","originZ","zIndex","fillOpacity","strokeOpacity","numOctaves","buildHTMLStyles","state","latestValues","options","transformTemplate","vars","transformOrigin","hasTransform","hasTransformOrigin","transformIsNone","valueType","valueAsType","transformIsDefault","enableHardwareAcceleration","allowTransformNone","transformString","trim","buildTransform","createHtmlRenderState","copyRawValuesOnly","useStyle","useInitialMotionValues","transformValues","useHTMLProps","htmlProps","dragListener","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","tabIndex","onTap","onTapStart","whileTap","validMotionProps","isValidMotionProp","isValidProp","shouldForward","require","_a","filterProps","isDom","forwardMotionProps","filteredProps","values","_objectWithoutProperties","excluded","sourceKeys","sourceSymbolKeys","calcOrigin","origin","offset","dashKeys","array","camelKeys","buildSVGAttrs","isSVGTag","attrX","attrY","pathLength","pathSpacing","pathOffset","viewBox","attrs","dimensions","pxOriginX","pxOriginY","calcSVGTransformOrigin","spacing","useDashCase","buildSVGPath","createSvgRenderState","toLowerCase","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","elementProps","renderedChildren","createElement","camelToDash","str","replace","renderHTML","element","styleProp","projection","getProjectionStyles","setProperty","camelCaseAttributes","renderSVG","renderState","_styleProp","setAttribute","scrapeMotionValuesFromProps","prevProps","newValues","scrapeMotionValuesFromProps$1","toUpperCase","resolveVariantFromProps","definition","currentValues","currentVelocity","isKeyframesTarget","resolveMotionValue","unwrappedValue","mix","toValue","makeUseVisualState","config","make","createRenderState","onMount","makeLatestValues","makeState","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","resolved","transitionEnd","transition","valueTarget","svgMotionConfig","getBBox","getBoundingClientRect","tagName","htmlMotionConfig","addDomEvent","eventName","handler","passive","addEventListener","removeEventListener","isPrimaryPointer","event","pointerType","button","isPrimary","extractEventInfo","pointType","point","addPointerEvent","addPointerInfo","combineFunctions","a","b","pipe","transformers","reduce","createLock","lock","globalHorizontalLock","globalVerticalLock","getGlobalLock","openHorizontal","openVertical","isDragActive","openGestureLock","Feature","isMounted","frameData","delta","timestamp","isProcessing","useDefaultElapsed","runNextFrame","stepsOrder","steps","acc","toRun","toRunNextFrame","numToRun","flushNextFrame","toKeepAlive","WeakSet","step","schedule","callback","addToCurrentFrame","buffer","add","cancel","index","splice","delete","process","createRenderStep","sync","keepAlive","immediate","startLoop","cancelSync","flushSync","processStep","stepId","processFrame","requestAnimationFrame","addHoverEvent","isActive","callbackName","info","getProps","whileHover","setActive","HoverGesture","FocusGesture","isFocusVisible","matches","onFocus","onBlur","isNodeOrChild","parentElement","noop","any","fireSyntheticPointerEvent","syntheticPointerEvent","PointerEvent","PressGesture","removeStartListeners","removeEndListeners","removeAccessibleListeners","startPointerPress","startEvent","startInfo","isPressing","removePointerUpListener","endEvent","endInfo","checkPressEnd","onTapCancel","removePointerCancelListener","cancelEvent","cancelInfo","cancelPress","startPress","startAccessiblePress","removeKeydownListener","keydownEvent","keyupEvent","removeBlurListener","removePointerListener","removeFocusListener","observerCallbacks","WeakMap","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","root","lookupRoot","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","unobserve","thresholdNames","all","InViewFeature","hasEnteredView","isInView","viewport","rootMargin","amount","once","threshold","isIntersecting","onViewportEnter","onViewportLeave","startObserver","hasOptionsChanged","prevViewport","hasViewportOptionChanged","gestureAnimations","shallowCompare","next","prev","prevLength","resolveVariant","getCurrent","velocity","optimizedAppearDataAttribute","warning","invariant","secondsToMilliseconds","seconds","millisecondsToSeconds","milliseconds","instantAnimationState","isBezierDefinition","easing","isWaapiSupportedEasing","supportedWaapiEasing","every","cubicBezierAsString","c","d","linear","ease","easeIn","easeOut","easeInOut","circIn","circOut","backIn","backOut","mapEasingToNativeEasing","featureTests","waapi","Element","results","supports","calcBezier","a1","a2","cubicBezier","mX1","mY1","mX2","mY2","getTForX","aX","lowerBound","upperBound","currentX","currentT","abs","binarySubdivide","mirrorEasing","reverseEasing","sin","acos","circInOut","backInOut","easingLookup","anticipate","pow","easingDefinitionToFunction","isColorString","testProp","splitColor","aName","bName","cName","match","rgbUnit","clampRgbUnit","rgba","red","green","blue","alpha$1","hex","r","g","substring","parseInt","hsla","hue","saturation","lightness","from","to","progress","hueToRgb","q","mixLinearColor","fromExpo","sqrt","colorTypes","asRGBA","find","model","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","colorToken","numberToken","analyseComplexValue","numColors","numNumbers","colors","numbers","tokenised","createTransformer","numValues","output","convertNumbersToZero","complex","_b","isNaN","getAnimatableNone","parsed","transformer","getMixer","mixComplex","mixArray","blendValue","fromThis","mixObject","template","originStats","targetStats","toFromDifference","mixNumber","createMixers","customMixer","mixers","mixerFactory","numMixers","mixer","easingFunction","interpolate","input","isClamp","inputLength","reverse","interpolator","progressInRange","defaultOffset","arr","remaining","offsetProgress","fillOffset","keyframes","duration","keyframeValues","times","easingFunctions","isEasingArray","done","absoluteTimes","o","convertOffsetToTimes","mapTimeToKeyframe","calculatedDuration","velocityPerSecond","frameDuration","calcGeneratorVelocity","resolveValue","prevT","safeMin","findSpring","envelope","derivative","bounce","mass","dampingRatio","undampedFreq","exponentialDecay","calcAngularFreq","exp","f","initialGuess","result","approximateRoot","stiffness","damping","durationKeys","physicsKeys","isSpringType","spring","resolveSpring","restDelta","restSpeed","springOptions","isResolvedFromDuration","derived","getSpringOptions","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","angularFreq","cos","dampedAngularFreq","freqForT","sinh","cosh","isBelowVelocityThreshold","isBelowDisplacementThreshold","inertia","power","timeConstant","bounceDamping","bounceStiffness","modifyTarget","nearestBoundary","amplitude","ideal","timeReachedBoundary","spring$1","calcDelta","calcLatest","applyFriction","latest","checkCatchBoundary","hasUpdatedFrame","frameloopDriver","passTimestamp","stop","now","performance","calcGeneratorDuration","generator","Infinity","types","decay","tween","animateValue","resolveFinishedPromise","currentFinishedPromise","animationDriver","autoplay","delay","driver","keyframes$1","repeat","repeatDelay","repeatType","onPlay","onStop","onComplete","onUpdate","speed","hasStopped","updateFinishedPromise","Promise","resolve","mapNumbersToKeyframes","generatorFactory","mirroredGenerator","playState","holdTime","startTime","cancelTime","resolvedDuration","totalDuration","currentTime","tick","timeWithoutDelay","isInDelayPhase","elapsed","frameGenerator","currentIteration","floor","iterationProgress","iterationIsOdd","isAnimationFinished","finish","stopAnimationDriver","play","controls","then","reject","time","newTime","newSpeed","pause","complete","sample","acceleratedValues","createAcceleratedAnimation","valueName","requiresPregeneratedKeyframes","sampleAnimation","pregeneratedKeyframes","keyframeOptions","iterations","direction","animateStyle","owner","cancelAnimation","safeCancel","onfinish","getFinalKeyframe","playbackRate","setWithVelocity","createInstantAnimation","setValue","underDampedSpring","keyframesTransition","getDefaultTransition","valueKey","isAnimatable","maxDefaults","applyDefaultFilter","slice","defaultValue","functionRegex","functions","defaultValueTypes","backgroundColor","outlineColor","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","isTransitionDefined","when","delayChildren","staggerChildren","staggerDirection","isZero","getZeroUnit","potentialUnitType","getValueTransition","getKeyframes","isTargetAnimatable","fillWildcardKeyframes","animateMotionValue","valueTransition","originKeyframe","targetKeyframe","isOriginAnimatable","HTMLElement","acceleratedAnimation","isWillChangeMotionValue","isZeroValueString","addUniqueItem","item","removeItem","SubscriptionManager","subscriptions","numSubscriptions","isFloat","MotionValue","version","timeDelta","lastUpdated","canTrackVelocity","events","updateAndNotify","postRender","scheduleVelocityCheck","change","notify","velocityChange","renderRequest","velocityCheck","hasAnimated","subscription","on","unsubscribe","read","getSize","eventManagers","clear","passiveEffect","stopPassiveEffect","startAnimation","animationStart","animationComplete","clearAnimation","animationCancel","clearListeners","motionValue","testValueType","dimensionValueTypes","findDimensionValueType","valueTypes","findValueType","setMotionValue","hasValue","getValue","addValue","setTarget","makeTargetAnimatable","getOriginFromTransition","shouldBlockAnimation","protectedKeys","needsAnimating","shouldBlock","animateTarget","transitionOverride","willChange","animations","animationTypeState","getState","appearId","shouldReduceMotion","remove","animateVariant","variant","getAnimation","getChildAnimations","variantChildren","forwardDelay","animateChildren","first","last","maxStaggerDuration","generateStaggerDuration","sort","sortByTreeOrder","sortNodePosition","reversePriorityOrder","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","createAnimationState","createTypeState","whileInView","whileDrag","whileFocus","isInitialRender","buildResolvedTypeValues","changedActiveType","getVariantContext","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isInherited","manuallyAnimateOnMount","prevProp","variantDidChange","checkVariantsDidChange","shouldAnimateType","definitionList","resolvedValues","prevResolvedValues","allKeys","markToAnimate","fallbackAnimation","fallbackTarget","getBaseTarget","shouldAnimate","setAnimateFunction","makeAnimator","AnimationFeature","subscribe","updateAnimationControlsSubscription","ExitAnimationFeature","isPresent","onExitComplete","prevIsPresent","prevPresenceContext","exitAnimation","register","distance2D","xDelta","yDelta","PanSession","handlers","lastMoveEvent","lastMoveEventInfo","updatePoint","getPanInfo","history","isPanStarted","isDistancePastThreshold","onStart","onMove","handlePointerMove","transformPoint","handlePointerUp","end","onEnd","onSessionEnd","panInfo","initialInfo","onSessionStart","removeListeners","subtractPoint","lastDevicePoint","startDevicePoint","timestampedPoint","lastPoint","calcLength","axis","isNear","maxDistance","calcAxisDelta","originPoint","translate","calcBoxDelta","calcRelativeAxis","relative","calcRelativeBox","calcRelativeAxisPosition","calcRelativePosition","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","eachAxis","convertBoundingBoxToBox","isIdentityScale","hasScale","has2DTranslate","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","snapToDefault","Number","isInteger","translateAxis","transformAxis","transforms","scaleKey","originKey","axisOrigin","xKeys","yKeys","transformBox","measureViewportBox","topLeft","bottomRight","transformBoxPoints","elementDragControls","VisualElementDragControls","openGlobalLock","isDragging","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","snapToCursor","stopAnimation","dragPropagation","onDragStart","resolveConstraints","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","dragDirectionLock","onDirectionLock","onDrag","getCurrentDirection","updateAxis","panSession","getTransformPagePoint","onDragEnd","_point","shouldDrag","axisValue","applyConstraints","dragConstraints","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","dragMomentum","dragTransition","dragSnapToOrigin","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","dragKey","externalMotionValue","boxProgress","sourceLength","targetLength","updateScroll","updateLayout","stopPointerListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","scalePositionWithinConstraints","stopLayoutUpdateListener","hasLayoutChanged","lockThreshold","DragGesture","removeGroupControls","dragControls","addListeners","asyncHandler","PanGesture","removePointerDownListener","pointerDownEvent","session","createPanHandlers","onPanSessionStart","onPanStart","onPan","onPanEnd","onPointerDown","updateHandlers","pixelsToPercent","pixels","correctBorderRadius","correct","cssVariableRegex","parseCSSVariable","exec","getVariableValue","depth","fallback","getComputedStyle","getPropertyValue","varToken","correctBoxShadow","treeScale","projectionDelta","original","containsCSSVariables","cssVariables","shadow","xScale","yScale","averageScale","cssVariable","MeasureLayoutWithContext","correctors","layoutGroup","switchLayoutGroup","defaultScaleCorrectors","group","didUpdate","safeToRemove","setOptions","layoutDependency","willUpdate","promote","relegate","stack","getStack","members","currentAnimation","isLead","promoteContext","scheduleCheckAfterUnmount","deregister","React__default","useId","usePresence","applyTo","boxShadow","borders","numBorders","asNumber","isPx","mixValues","follow","lead","shouldCrossfadeOpacity","isOnlyMember","easeCrossfadeIn","opacityExit","easeCrossfadeOut","borderLabel","followRadius","getRadius","leadRadius","radiusName","compress","copyAxisInto","originAxis","copyBoxInto","originBox","removePointDelta","removeAxisTransforms","sourceAxis","removeAxisDelta","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","boxEquals","aspectRatio","NodeStack","scheduleRender","prevLead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","resumingFrom","buildProjectionTransform","latestTransform","xTranslate","yTranslate","elementScaleX","elementScaleY","compareByDepth","FlatTree","isDirty","timeout","checkElapsed","record","MotionDebug","isSVGElement","SVGElement","transformAxes","projectionFrameData","totalNodes","resolvedTargetDeltas","recalculatedProjection","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","elementId","animationId","isTreeAnimating","isProjectionDirty","isSharedProjectionDirty","isTransformDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","potentialNodes","checkUpdateFailed","clearAllSnapshots","updateProjection","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","hasProjected","isVisible","animationProgress","sharedNodes","path","registerPotentialNode","subscriptionManager","args","cancelDelay","resizeUnblockUpdate","finishAnimation","registerSharedNode","hasRelativeTargetChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","targetLayout","hasOnlyRelativeTargetChanged","layoutRoot","setAnimationOrigin","animationOptions","preRender","isUpdateBlocked","resetRotation","shouldNotifyListeners","startUpdate","getTransformTemplate","prevTransformTemplateValue","updateSnapshot","notifyListeners","unblockUpdate","clearMeasurements","mountNodeEarly","resetTransformStyle","notifyLayoutUpdate","clearSnapshot","removeLeadSnapshots","measure","alwaysMeasureLayout","prevLayout","layoutCorrected","phase","needsMeasurement","layoutScroll","isRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundBox","measuredBox","boxWithoutScroll","rootScroll","transformOnly","withTransforms","boxWithoutTransform","targetDelta","scheduleUpdateProjection","relativeParent","resolvedRelativeTargetAt","forceRecalculation","getLead","isShared","canSkip","attemptToResolveRelativeTarget","getClosestProjectingParent","forceRelativeParentToResolveTarget","relativeTargetOrigin","targetWithTransforms","applyTransform","isProjecting","pendingAnimation","treePath","isSharedTransition","treeLength","display","applyTreeDeltas","projectionDeltaWithTransform","prevTreeScaleX","prevTreeScaleY","prevProjectionTransform","projectionTransform","notifyAll","snapshotLatestValues","mixedValues","prevRelativeTarget","relativeLayout","snapshotSource","layoutSource","isSharedLayoutAnimation","hasOpacityCrossfade","mixTargetDelta","mixAxisDelta","setTargetDelta","mixBox","motionValue$1","animateSingleValue","completeAnimation","exitAnimationComplete","shouldAnimatePositionOnly","animationType","xLength","yLength","initialPromotionConfig","shouldPreserveFollowOpacity","hasRotate","resetValues","setStaticValue","styles","visibility","pointerEvents","emptyStyles","valuesToRender","applyTransformsToTarget","corrected","num","hasListeners","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","removeLeadSnapshot","mixAxis","searchNode","querySelector","roundAxis","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","position","ProjectionNode","positionalKeys","isPositionalKey","isNumOrPxType","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","transformKeys","nonTranslationalTransformKeys","removeNonTranslationalTransform","removedTransforms","positionalValues","convertChangedValueTypes","changedKeys","originBbox","elementComputedStyle","targetBbox","jump","unitConversion","hasPositionalKey","targetPositionalKeys","removedTransformValues","hasAttemptedToRemoveTransformValues","changedValueTypeKeys","toType","fromType","numKeyframes","fromIndex","scrollY","pageYOffset","convertedTarget","scrollTo","checkAndConvertChangedValueTypes","parseDomVariant","resolveCSSVariables","prefersReducedMotion","hasReducedMotionListener","visualElementStore","featureNames","numFeatures","propEventHandlers","numVariantProps","VisualElement","valueSubscriptions","prevMotionValues","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","baseTarget","initialValues","initialMotionValues","_props","_prevProps","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","addListener","initPrefersReducedMotion","valueIsTransform","removeOnChange","latestValue","removeOnRenderRequest","other","sortInstanceNodePosition","ProjectionNodeConstructor","renderedProps","FeatureConstructor","MeasureLayoutComponent","feature","build","measureInstanceViewportBox","canMutate","makeTargetAnimatableFromInstance","listener","nextValue","prevValue","existingValue","getStaticValue","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getClosestVariantNode","startAtParent","closestVariantNode","removeValueFromRenderState","readValueFromInstance","valueFromInitial","getBaseTargetFromProps","DOMVisualElement","compareDocumentPosition","transitionOrigin","getOrigin","newValueKeys","numNewValues","targetValue","readValue","setBaseTarget","checkTargetForNewValues","HTMLVisualElement","defaultType","computedStyle","childSubscription","textContent","_superPropBase","property","getPrototypeOf","_get","Reflect","receiver","base","desc","SVGVisualElement","getAttribute","createDomVisualElement","motion","createDomMotionConfig"],"sourceRoot":""}